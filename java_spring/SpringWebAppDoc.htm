<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"ＭＳ 明朝";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
	{font-family:"ＭＳ Ｐゴシック";
	panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face
	{font-family:"ＭＳ Ｐ明朝";
	panose-1:2 2 6 0 4 2 5 8 3 4;}
@font-face
	{font-family:メイリオ;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@メイリオ";
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@ＭＳ 明朝";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:"\@ＭＳ Ｐゴシック";
	panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face
	{font-family:"\@ＭＳ Ｐ明朝";
	panose-1:2 2 6 0 4 2 5 8 3 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:メイリオ;}
h1
	{mso-style-link:"見出し 1 \(文字\)";
	margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:55.3pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-55.3pt;
	font-size:18.0pt;
	font-family:メイリオ;
	letter-spacing:1.0pt;
	font-weight:normal;}
h2
	{mso-style-link:"見出し 2 \(文字\)";
	margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:73.75pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-73.75pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:メイリオ;
	font-weight:normal;}
h3
	{mso-style-link:"見出し 3 \(文字\)";
	margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:34.05pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-34.05pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:メイリオ;
	font-weight:normal;}
h4
	{mso-style-link:"見出し 4 \(文字\)";
	margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:19.85pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-19.85pt;
	font-size:10.5pt;
	font-family:メイリオ;
	font-weight:normal;}
h5
	{mso-style-link:"見出し 5 \(文字\)";
	margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:51.05pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-11.35pt;
	font-size:10.5pt;
	font-family:"ＭＳ Ｐ明朝","serif";
	font-weight:normal;}
h6
	{mso-style-link:"見出し 6 \(文字\)";
	margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:17.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-11.35pt;
	page-break-after:avoid;
	font-size:10.5pt;
	font-family:メイリオ;
	font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-link:"見出し 7 \(文字\)";
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	page-break-after:avoid;
	font-size:10.5pt;
	font-family:"ＭＳ Ｐ明朝","serif";
	text-decoration:underline;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:6.0pt;
	margin-right:0mm;
	margin-bottom:6.0pt;
	margin-left:0mm;
	font-size:10.0pt;
	font-family:メイリオ;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:10.5pt;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:メイリオ;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:21.0pt;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:メイリオ;
	font-style:italic;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:31.5pt;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:メイリオ;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:42.0pt;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:メイリオ;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:52.5pt;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:メイリオ;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:63.0pt;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:メイリオ;}
p.MsoToc8, li.MsoToc8, div.MsoToc8
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:73.5pt;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:メイリオ;}
p.MsoToc9, li.MsoToc9, div.MsoToc9
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:84.0pt;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:メイリオ;}
p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:22.7pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"ＭＳ Ｐ明朝","serif";}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"ヘッダー \(文字\)";
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	font-size:10.5pt;
	font-family:メイリオ;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"フッター \(文字\)";
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	font-size:10.5pt;
	font-family:メイリオ;}
span.MsoPageNumber
	{font-family:"Arial","sans-serif";}
p.MsoListBullet, li.MsoListBullet, div.MsoListBullet
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:34.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-11.3pt;
	font-size:10.5pt;
	font-family:"ＭＳ Ｐ明朝","serif";}
p.MsoListBullet2, li.MsoListBullet2, div.MsoListBullet2
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:45.35pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-22.65pt;
	font-size:10.5pt;
	font-family:"ＭＳ Ｐ明朝","serif";}
p.MsoListBullet3, li.MsoListBullet3, div.MsoListBullet3
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:51.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-17.0pt;
	font-size:10.5pt;
	font-family:"ＭＳ Ｐ明朝","serif";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p
	{margin-right:0mm;
	margin-left:0mm;
	font-size:12.0pt;
	font-family:"ＭＳ Ｐゴシック";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"吹き出し \(文字\)";
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:9.0pt;
	font-family:"Arial","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:42.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:メイリオ;}
span.a
	{mso-style-name:"ヘッダー \(文字\)";
	mso-style-link:ヘッダー;}
span.a0
	{mso-style-name:"フッター \(文字\)";
	mso-style-link:フッター;}
span.1
	{mso-style-name:"見出し 1 \(文字\)";
	mso-style-link:"見出し 1";
	font-family:メイリオ;
	letter-spacing:1.0pt;}
span.2
	{mso-style-name:"見出し 2 \(文字\)";
	mso-style-link:"見出し 2";
	font-family:メイリオ;}
span.3
	{mso-style-name:"見出し 3 \(文字\)";
	mso-style-link:"見出し 3";
	font-family:メイリオ;}
span.4
	{mso-style-name:"見出し 4 \(文字\)";
	mso-style-link:"見出し 4";
	font-family:メイリオ;}
span.5
	{mso-style-name:"見出し 5 \(文字\)";
	mso-style-link:"見出し 5";
	font-family:"ＭＳ Ｐ明朝","serif";}
span.6
	{mso-style-name:"見出し 6 \(文字\)";
	mso-style-link:"見出し 6";
	font-family:メイリオ;}
span.7
	{mso-style-name:"見出し 7 \(文字\)";
	mso-style-link:"見出し 7";
	font-family:"ＭＳ Ｐ明朝","serif";
	text-decoration:underline;}
p.12pt, li.12pt, div.12pt
	{mso-style-name:"スタイル 標準インデント + ＭＳ Ｐゴシック 12 pt";
	margin-top:0mm;
	margin-right:0mm;
	margin-bottom:0mm;
	margin-left:22.7pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:12.0pt;
	font-family:"ＭＳ Ｐゴシック";
	text-decoration:underline;}
p.16pt, li.16pt, div.16pt
	{mso-style-name:"スタイル ＭＳ Ｐゴシック 16 pt 中央揃え";
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:16.0pt;
	font-family:"ＭＳ Ｐゴシック";}
span.a1
	{mso-style-name:"吹き出し \(文字\)";
	mso-style-link:吹き出し;
	font-family:"Arial","sans-serif";}
.MsoChpDefault
	{font-family:"Century","serif";}
 /* Page Definitions */
 @page WordSection1
	{size:210.0mm 842.0pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0mm;}
ul
	{margin-bottom:0mm;}
-->
</style>

</head>

<body lang=JA link=blue vlink=purple style='text-justify-trim:punctuation'>

<div class=WordSection1>

<p class=MsoNormal><span lang=EN-US style='font-size:28.0pt'>Web</span><span
style='font-size:28.0pt'>アプリケーション入門</span></p>

<p class=MsoNormal>目次</p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180256">1<span lang=EN-US><span
lang=EN-US>． Web</span></span><span lang=EN-US><span lang=EN-US>アプリケーションとは</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180257">2<span lang=EN-US><span
lang=EN-US>．</span></span><span lang=EN-US><span lang=EN-US> </span></span><span
lang=EN-US><span lang=EN-US>フレームワーク</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180258">2.1 <span
lang=EN-US><span lang=EN-US>利点</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180259">2.2 <span
lang=EN-US><span lang=EN-US>選択</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180260">3<span lang=EN-US><span
lang=EN-US>． Spring Boot</span></span><span style='color:windowtext;display:
none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180261">3.1 Spring framework<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180262">3.2 Spring Boot<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180263">3.3 <span
lang=EN-US><span lang=EN-US>プログラミング言語</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180264">3.4 <span
lang=EN-US><span lang=EN-US>開発環境</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180265">3.5 Spring
Initializr<span style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180266">4<span lang=EN-US><span
lang=EN-US>．</span></span><span lang=EN-US><span lang=EN-US> </span></span><span
lang=EN-US><span lang=EN-US>簡単なWeb</span></span><span lang=EN-US><span
lang=EN-US>アプリケーション</span></span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180267">4.1 <span
lang=EN-US><span lang=EN-US>（手順１）初期プロジェクトを作成</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180268">4.2 <span
lang=EN-US><span lang=EN-US>（手順２）初期プロジェクトをダウンロード</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180269">4.3 <span
lang=EN-US><span lang=EN-US>（手順３）初期プロジェクトをEclipse</span></span><span
lang=EN-US><span lang=EN-US>にインポート</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180270">4.4 <span
lang=EN-US><span lang=EN-US>（手順４）初期プロジェクトをカスタマイス</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180271">4.4.1 <span
lang=EN-US><span lang=EN-US>カスタマイズの場所</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180272">4.4.2 <span
lang=EN-US><span lang=EN-US>カスタマイズの内容</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180273">4.5 Web<span
lang=EN-US><span lang=EN-US>アプリケーションを起動</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>13</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180274">4.6 <span
lang=EN-US><span lang=EN-US>結果を確認</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>14</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180275">4.7 Web<span
lang=EN-US><span lang=EN-US>アプリケーションを停止</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>14</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180276">5<span lang=EN-US><span
lang=EN-US>． Web</span></span><span lang=EN-US><span lang=EN-US>アプリケ<span
lang=EN-US>ーションの設計と構造</span></span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>14</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180277">5.1 <span
lang=EN-US><span lang=EN-US>アプリケーションアーキテクチャ</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>15</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180278">5.2 MVC<span
lang=EN-US><span lang=EN-US>（Model View Controller</span></span><span
lang=EN-US><span lang=EN-US>）</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180279">5.3 <span
lang=EN-US><span lang=EN-US>レイヤードアーキテクチャ</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180280">5.4 <span
lang=EN-US><span lang=EN-US>クリーンアーキテ<span lang=EN-US>クチャ</span></span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180281">6<span lang=EN-US><span
lang=EN-US>． Java</span></span><span lang=EN-US><span lang=EN-US>パッケージ構成の例</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180282">6.1 <span
lang=EN-US><span lang=EN-US>層型アーキテクチャ</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180283">6.2 <span
lang=EN-US><span lang=EN-US>レイヤードアーキテクチャ的な例</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180284">6.3 <span
lang=EN-US><span lang=EN-US>クリーンアーキテクチャ的な例</span></span><span style='color:
windowtext;display:none;text-decoration:none'>.. </span><span style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180285">7<span lang=EN-US><span
lang=EN-US>．</span></span><span lang=EN-US><span lang=EN-US> </span></span><span
lang=EN-US><span lang=EN-US>取引銀行管理シ<span lang=EN-US>ステム（サンプルアプリ）</span></span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>18</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180286">7.1 <span
lang=EN-US><span lang=EN-US>アプリケーションの要件</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>18</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180287">7.2 <span
lang=EN-US><span lang=EN-US>ユースケ―ス</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>19</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180288">7.3 <span
lang=EN-US><span lang=EN-US>プロジェクト作成時の手順</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>19</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180289">7.3.1 Initializr<span
lang=EN-US><span lang=EN-US>で初期プロジェクトを作成</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180290">7.3.2 GitHub<span
lang=EN-US><span lang=EN-US>でリポジトリ mainbank </span></span><span lang=EN-US><span
lang=EN-US>を作成（任意：必要な方のみ）</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180291">7.4 <span
lang=EN-US><span lang=EN-US>ドメインモデルと永続化（継承の永続化戦略）</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>25</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180292">8<span lang=EN-US><span
lang=EN-US>． Spring</span></span><span lang=EN-US><span lang=EN-US>依存性注入とは</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>30</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180293">8.1 DI<span
lang=EN-US><span lang=EN-US>の基本的な考え方</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>30</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180294">8.2 DI<span
lang=EN-US><span lang=EN-US>の例</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>30</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180295">8.3 DI<span
lang=EN-US><span lang=EN-US>の仕組み</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>31</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180296">8.4 DI<span
lang=EN-US><span lang=EN-US>のメリット</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>32</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180297">8.5 <span
lang=EN-US><span lang=EN-US>依存性とは</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>32</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180298">8.6 <span
lang=EN-US><span lang=EN-US>注入とは</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>32</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180299">9<span lang=EN-US><span
lang=EN-US>． Spring</span></span><span lang=EN-US><span lang=EN-US>アノテーション</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>33</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180300">9.1 <span
lang=EN-US><span lang=EN-US>主要なアノテーション</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>33</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180301">9.2 <span
lang=EN-US><span lang=EN-US>バリデーション関係</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>39</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180302">9.3 JPA<span
lang=EN-US><span lang=EN-US>関係</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>43</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180303">10<span lang=EN-US><span
lang=EN-US>．</span></span><span lang=EN-US><span lang=EN-US> </span></span><span
lang=EN-US><span lang=EN-US>コントローラとビューの間のデ<span lang=EN-US>ータの受け渡し</span></span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>47</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180304">10.1 View <span
lang=EN-US><span lang=EN-US>→ Controller</span></span><span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>47</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180305">10.1.1 <span
lang=EN-US><span lang=EN-US>補足説明</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>48</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180306">10.2 Controller <span
lang=EN-US><span lang=EN-US>→ View</span></span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>48</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180307">11<span lang=EN-US><span
lang=EN-US>． Spring</span></span><span lang=EN-US><span lang=EN-US>アスペクト指向プログラミング</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>49</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180308">11.1 <span
lang=EN-US><span lang=EN-US>構成要素</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>50</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180309">11.1.1 <span
lang=EN-US><span lang=EN-US>アスペクト（Aspect</span></span><span lang=EN-US><span
lang=EN-US>）</span></span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>50</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180310">11.1.2 <span
lang=EN-US><span lang=EN-US>アドバイス（Advice</span></span><span lang=EN-US><span
lang=EN-US>）</span></span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>50</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180311">11.1.3 <span
lang=EN-US><span lang=EN-US>ジョインポイント（Join Point</span></span><span lang=EN-US><span
lang=EN-US>）</span></span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>50</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180312">11.1.4 <span
lang=EN-US><span lang=EN-US>ポイントカット（Pointcut</span></span><span lang=EN-US><span
lang=EN-US>）</span></span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>50</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180313">11.1.5 <span
lang=EN-US><span lang=EN-US>ターゲット（Target</span></span><span lang=EN-US><span
lang=EN-US>）</span></span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>50</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180314">11.2 <span
lang=EN-US><span lang=EN-US>簡単な例</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>50</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180315">12<span lang=EN-US><span
lang=EN-US>． Spring JPA </span></span><span lang=EN-US><span lang=EN-US>永続化</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>52</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180316">12.1 <span
lang=EN-US><span lang=EN-US>エンティテ<span lang=EN-US>ィオブジェクトの状態遷移</span></span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>52</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180317">12.2 <span
lang=EN-US><span lang=EN-US>エンティティオブジェクトの状態</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>52</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180318">12.3 <span
lang=EN-US><span lang=EN-US>トランザクション境界での状態遷移の挙動</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>53</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180319">13<span lang=EN-US><span
lang=EN-US>． MySQL</span></span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>53</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180320">13.1 <span
lang=EN-US><span lang=EN-US>データベースの作成</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>54</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180321">13.2 <span
lang=EN-US><span lang=EN-US>ユーザとパスワード<span lang=EN-US>の作成</span></span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>55</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180322">13.2.1 username<span
lang=EN-US><span lang=EN-US>とpassword </span></span><span lang=EN-US><span
lang=EN-US>の確認方法と設定方法</span></span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>55</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180323">13.3
application.properties<span lang=EN-US><span lang=EN-US>の設定</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>55</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180324">13.4 <span
lang=EN-US><span lang=EN-US>データベースとスキーマ</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>56</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180325">13.5 spring.jpa.hibernate.ddl-auto<span
lang=EN-US><span lang=EN-US>の設定</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>56</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180326">13.5.1 <span
lang=EN-US><span lang=EN-US>代表的なオプション</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>56</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc183180327">13.5.2 <span
lang=EN-US><span lang=EN-US>オプションのまとめ</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>57</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180328">14<span lang=EN-US><span
lang=EN-US>． Tips</span></span><span lang=EN-US><span lang=EN-US>レンダリング</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>57</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180329">14.1 <span
lang=EN-US><span lang=EN-US>サーバサイドレンダリング（Server-Side Rendering, SSR</span></span><span
lang=EN-US><span lang=EN-US>）</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>57</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180330">14.2 <span
lang=EN-US><span lang=EN-US>クライアントサイドレンダリング（Client-Side Rendering, CSR</span></span><span
lang=EN-US><span lang=EN-US>）</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>58</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc183180331">14.3 <span
lang=EN-US><span lang=EN-US>静的サイト生成（Static Site Generation, SSG</span></span><span
lang=EN-US><span lang=EN-US>）</span></span><span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>58</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc183180332">15<span lang=EN-US><span
lang=EN-US>． Tips</span></span><span lang=EN-US><span lang=EN-US>：セレクトボックスの書き方</span></span><span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>58</span></a></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180256"><span lang=EN-US>1． </span><span lang=EN-US>Web</span>アプリケーションとは</a></h1>

<p class=MsoNormal><span lang=EN-US>Web</span>アプリケーション（<span lang=EN-US>Web
Application</span>、<span lang=EN-US>Web App</span>）とは、インターネットを介して、<span
lang=EN-US>Web</span>ブラウザ上で動作するアプリケーションのことです。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>例　マイナポータル（行政手続のオンライン窓口）</p>

<p class=MsoNormal><span lang=EN-US><img width=414 height=301 id="図 1"
src="SpringWebAppDoc.files/image001.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180257"><span lang=EN-US>2． </span>フレームワーク</a></h1>

<p class=MsoNormal>マイナポータルなど、さまざまな<span lang=EN-US>Web</span>アプリケーションが存在しますが、それらがゼロから全て開発されているわけではありません。通常、フレームワークと呼ばれるソフトウェアを基盤として開発が行われます。<span
lang=EN-US>Web</span>アプリケーション用フレームワークとは、多くの<span lang=EN-US>Web</span>アプリケーションで共通して利用できる構造や基本的な機能を提供する枠組みです。</p>

<p class=MsoNormal>フレームワークには、<span lang=EN-US>PHP</span>用、<span lang=EN-US>Ruby</span>用、そして<span
lang=EN-US>Java</span>用のものがあり、<span lang=EN-US>Java</span>では特に<span lang=EN-US>Spring</span>が広く使われています。なお、同じプログラミング言語でも複数のフレームワークが存在します。多くのフレームワークは、オープンソースソフトウェアとして無料で利用することが可能です。</p>

<p class=MsoNormal>フレームワークを使うことで、開発者は基礎的な部分を一から作る手間を省き、アプリケーションの本質的な機能の開発に集中することができます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180258"><span lang=EN-US>2.1 </span>利点</a></h2>

<p class=MsoNormal>フレームワークを使用すると次のような利点があります。</p>

<h4><span lang=EN-US>（1） </span>再利用できる部品を提供します</h4>

<p class=MsoNormal>フレームワークには、よく使われる機能やパターン（ユーザー認証、データベース接続、ページ遷移など）が組み込まれています。それを利用することで、毎回ゼロからコードを書く必要がありません。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（2） </span>標準的な構造を提供します</h4>

<p class=MsoNormal>フレームワークは、アプリケーションの構造や作り方にある程度のルールを提供します。このため、どの開発者も一貫した方法でコードを書くことができ、チームでの開発が容易になります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（3） </span>セキュリティやパフォーマンスを向上できます</h4>

<p class=MsoNormal>フレームワークには、セキュリティやパフォーマンスに関する考慮がされており、これを利用することでセキュアで効率的な<span
lang=EN-US>Web</span>アプリケーションを作ることができます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180259"><span lang=EN-US>2.2 </span>選択</a></h2>

<p class=MsoNormal><span lang=EN-US>Web</span>アプリケーションを作成する際には、何らかのフレームワークを使用することが一般的です。フレームワークは、使用するプログラミング言語によって選択肢が決まってきます。</p>

<p class=MsoNormal><span lang=EN-US>Java</span>言語用としては、本書で紹介する<span lang=EN-US>
Spring </span>の他にも<span lang=EN-US> Apache Struts </span>などがあります。</p>

<p class=MsoNormal><span lang=EN-US>Python </span>用の場合は、<span lang=EN-US>Django
</span>や<span lang=EN-US> Flask</span>、<span lang=EN-US>PHP </span>用の場合は、<span
lang=EN-US>Laravel</span>や<span lang=EN-US>CakePHP</span>、<span lang=EN-US>Ruby
</span>用の場合は、<span lang=EN-US>Ruby on Rails</span>、<span lang=EN-US>C#</span>の場合は、<span
lang=EN-US>ASP.NET Core Blazor </span>などがあります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180260"><span lang=EN-US>3． </span><span lang=EN-US>Spring
Boot</span></a></h1>

<p class=MsoNormal><span lang=EN-US>Spring Boot </span>は<span lang=EN-US>
Spring </span>フレームワークの一部分（サブセット）です。<span lang=EN-US>Spring Boot</span>について説明する前に、<span
lang=EN-US>Spring</span>について説明します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180261"><span lang=EN-US>3.1 </span><span lang=EN-US>Spring
framework</span></a></h2>

<p class=MsoNormal><span lang=EN-US>Spring framework</span>（以降<span lang=EN-US>
Spring </span>と略称します）は、<span lang=EN-US>Java</span>でエンタープライズアプリケーションを開発するためのフレームワークです。主な特徴は、依存性注入（<span
lang=EN-US>DI</span>）やアスペクト指向プログラミング（<span lang=EN-US>AOP</span>）などを使って、柔軟でスケーラブルなアプリケーションを構築しやすくする点です。<span
lang=EN-US>Spring</span>を使うと、ビジネスロジックに集中しやすくなります。</p>

<p class=MsoNormal>一方で、<span lang=EN-US>Spring</span>は多くの機能を有するフレームワークであるため、どの機能を選択し使用すればよいのか戸惑うこともありました。そこでこの問題を解消するために登場したのが<span
lang=EN-US> Spring Boot </span>です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180262"><span lang=EN-US>3.2 </span><span lang=EN-US>Spring
Boot</span></a></h2>

<p class=MsoNormal><span lang=EN-US>Spring Boot</span>は、<span lang=EN-US>Spring</span>をより簡単に使えるようにしたフレームワークです。自動設定機能や組み込み<span
lang=EN-US>Web</span>サーバー（<span lang=EN-US>Tomcat</span>など）が提供されているため、設定が少なく、すぐにアプリケーションを起動できるのが特徴です。スムーズに<span
lang=EN-US>Spring</span>のプロジェクトを始められる点が<span lang=EN-US>Spring Boot</span>の大きなメリットです。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180263"><span lang=EN-US>3.3 </span>プログラミング言語</a></h2>

<p class=MsoNormal><span lang=EN-US>Spring </span>フレームワークは、主に<span lang=EN-US>
Java </span>をサポートしていますが、他の複数のプログラミング言語も利用可能です。</p>

<p class=MsoNormal>以下の言語が<span lang=EN-US> Spring </span>フレームワークおよび<span
lang=EN-US> Spring Boot </span>でサポートされています：</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Java</span></h6>

<p class=MsoNormal><span lang=EN-US>Spring </span>は元々<span lang=EN-US> Java </span>のために設計されたフレームワークであり、<span
lang=EN-US>Java </span>が主な言語です。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Kotlin</span></h6>

<p class=MsoNormal><span lang=EN-US>Spring </span>フレームワークおよび<span lang=EN-US>
Spring Boot </span>では、<span lang=EN-US>Kotlin </span>も公式にサポートされています。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Groovy</span></h6>

<p class=MsoNormal><span lang=EN-US>Groovy </span>は、動的言語でありながら<span lang=EN-US>
JVM </span>上で動作するスクリプト言語です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>これらの言語はすべて<span lang=EN-US> Spring Boot </span>でも同様にサポートされており、<span
lang=EN-US>Java </span>プロジェクトと同じように、<span lang=EN-US>Kotlin </span>や<span
lang=EN-US> Groovy </span>で<span lang=EN-US> Spring Boot </span>アプリケーションを構築することができます。</p>

<p class=MsoNormal>例えば、<span lang=EN-US>Spring Initializr</span>（後述）を使って、<span
lang=EN-US>Kotlin </span>や<span lang=EN-US> Groovy </span>ベースの<span lang=EN-US>
Spring Boot </span>プロジェクトを作成することも可能です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180264"></a><a name="_Toc183030637"><span lang=EN-US>3.4 </span>開発環境</a></h2>

<p class=MsoNormal>本書では、統合開発環境（<span lang=EN-US>IDE</span>）として「<span
lang=EN-US>Pleiades All in One</span>」（以降<span lang=EN-US>Eclipse</span>と記載）を使用します。</p>

<p class=MsoNormal>（参考）</p>

<p class=MsoNormal>もし、<span lang=EN-US>Java</span>言語や<span lang=EN-US>IDE</span>に関する情報が必要でしたら</p>

<p class=MsoNormal>「<span lang=EN-US>Java</span>プログラミング入門」の「<span lang=EN-US>1.
</span>学習環境を準備します」を参考ください。</p>

<p class=MsoNormal><span lang=EN-US><a
href="http://www.fk-nextdesign.sakura.ne.jp/learn/Roadmap.html">http://www.fk-nextdesign.sakura.ne.jp/learn/Roadmap.html</a></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180265"><span lang=EN-US>3.5 </span><span lang=EN-US>Spring
Initializr</span></a></h2>

<p class=MsoNormal>本書では<span lang=EN-US>Spring</span>の初期プロジェクト（<span
lang=EN-US>IDE</span>にインポート可能な空の<span lang=EN-US>Spring</span>アプリケーションプロジェクト）を作成するために、「<span
lang=EN-US>Spring Initialzr</span>」を利用します。</p>

<p class=MsoNormal><span lang=EN-US>Spring Boot</span>は、<span lang=EN-US>Spring</span>を使いやすくしましたが、それでも、最初に<span
lang=EN-US> Spring Boot</span>用の<span lang=EN-US>Java</span>プロジェクトを構成するときはボタンひとつでは済みません。そこで<span
lang=EN-US>Web</span>画面から構成できるようにしたのが、<span lang=EN-US>Spring Initialzr</span>です。この初期プロジェクトを<span
lang=EN-US>Eclipse</span>にインポートして、独自のプログラムを追加・編集することで、自前の<span lang=EN-US>Web</span>アプリケーションとして作成します。具体的な操作は後述します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180266"><span lang=EN-US>4． </span>簡単な<span lang=EN-US>Web</span>アプリケーション</a></h1>

<p class=MsoNormal><span lang=EN-US>Eclipse</span>を使って<span lang=EN-US>Java
Spring Web</span>アプリケーションを作成するためには、まず<span lang=EN-US>Eclipse</span>上に新しいプロジェクトを作成します。方法はいくつかありますが、本書では次の手順で作成します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180267"><span lang=EN-US>4.1 </span>（手順１）初期プロジェクトを作成</a></h2>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>Spring initializr</span>にアクセスします</h4>

<p class=MsoNormal><span lang=EN-US><a href="https://start.spring.io/">https://start.spring.io/</a></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（2） </span>次図のように設定します</h4>

<p class=MsoNormal>本サンプルでは<span lang=EN-US> Maven </span>を選択しますが、他でも問題ありません。</p>

<p class=MsoNormal><span lang=EN-US>Dependencies</span>（依存性）は次の３つを選択します。</p>

<p class=MsoNormal>右上の「<span lang=EN-US>ADD </span>…」ボタンを押下して<span lang=EN-US>Dependency</span>を選択し追加します。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Spring Web</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Thymeleaf</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Spring Boot DevTool</span></h6>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>上の構成は、<span lang=EN-US>Thyemleaf</span>を使う場合の最小構成です。</p>

<p class=MsoNormal>もし、永続化（データベース）を使用するような場合は、次の依存性が必要です。</p>

<p class=MsoNormal>この依存性の構成は一例です。例えば、<span lang=EN-US>MySQL</span>を使用したい場合は別の構成になります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Spring Web</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Spring Data JPA</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>PostgreSQL Driver</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>H2 Database</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Thymeleaf</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Spring Boot DevTool</span></h6>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251670528;left:0px;
margin-left:94px;margin-top:537px;width:193px;height:48px'><img width=193
height=48 src="SpringWebAppDoc.files/image002.png"></span><span
style='position:absolute;z-index:251663360;left:0px;margin-left:-21px;
margin-top:1px;width:725px;height:588px'><img width=725 height=588
src="SpringWebAppDoc.files/image003.png"></span><span style='position:absolute;
z-index:251668480;left:0px;margin-left:17px;margin-top:252px;width:330px;
height:212px'><img width=330 height=212 src="SpringWebAppDoc.files/image004.png"></span><span
style='position:absolute;z-index:251666432;left:0px;margin-left:18px;
margin-top:73px;width:92px;height:31px'><img width=92 height=31
src="SpringWebAppDoc.files/image005.png"></span><span style='position:absolute;
z-index:251664384;left:0px;margin-left:552px;margin-top:3px;width:134px;
height:44px'><img width=134 height=44 src="SpringWebAppDoc.files/image006.png"></span><span
lang=EN-US><img border=0 width=696 height=592 id="図 15"
src="SpringWebAppDoc.files/image007.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180268"><span lang=EN-US>4.2 </span>（手順２）初期プロジェクトをダウンロード</a></h2>

<p class=MsoNormal>適切なフォルダに保存し、展開します。</p>

<p class=MsoNormal>このフォルダは<span lang=EN-US>Eclipse</span>プロジェクトの保管場所になります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>ダウンロードし展開後の内容</p>

<p class=MsoNormal><span lang=EN-US>C:.</span></p>

<p class=MsoNormal>│<span lang=EN-US>  .gitignore</span></p>

<p class=MsoNormal>│<span lang=EN-US>  HELP.md</span></p>

<p class=MsoNormal>│<span lang=EN-US>  mvnw</span></p>

<p class=MsoNormal>│<span lang=EN-US>  mvnw.cmd</span></p>

<p class=MsoNormal>│<span lang=EN-US>  pom.xml</span></p>

<p class=MsoNormal>│</p>

<p class=MsoNormal>├─<span lang=EN-US>.mvn</span></p>

<p class=MsoNormal>│<span lang=EN-US>  </span>└─<span lang=EN-US>wrapper</span></p>

<p class=MsoNormal>│<span lang=EN-US>          maven-wrapper.properties</span></p>

<p class=MsoNormal>│</p>

<p class=MsoNormal>└─<span lang=EN-US>src</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>├─<span lang=EN-US>main</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>├─<span
lang=EN-US>java</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>│<span
lang=EN-US>  </span>└─<span lang=EN-US>com</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>│<span
lang=EN-US>      </span>└─<span lang=EN-US>example</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>│<span
lang=EN-US>          </span>└─<span lang=EN-US>hello</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>│<span
lang=EN-US>                  HelloApplication.java</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>│</p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>└─<span
lang=EN-US>resources</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>      </span>│<span
lang=EN-US>  application.properties</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>      </span>│</p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>      </span>├─<span
lang=EN-US>static</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>      </span>└─<span
lang=EN-US>templates</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>└─<span lang=EN-US>test</span></p>

<p class=MsoNormal><span lang=EN-US>        </span>└─<span lang=EN-US>java</span></p>

<p class=MsoNormal><span lang=EN-US>            </span>└─<span lang=EN-US>com</span></p>

<p class=MsoNormal><span lang=EN-US>                </span>└─<span lang=EN-US>example</span></p>

<p class=MsoNormal><span lang=EN-US>                    </span>└─<span
lang=EN-US>hello</span></p>

<p class=MsoNormal><span lang=EN-US>                           
HelloApplicationTests.java</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180269"><span lang=EN-US>4.3 </span>（手順３）初期プロジェクトを<span
lang=EN-US>Eclipse</span>にインポート</a></h2>

<p class=MsoNormal><span lang=EN-US>Eclipse</span>で、ファイル → インポート → 既存<span
lang=EN-US> Maven </span>プロジェクト →</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251691008;left:0px;
margin-left:207px;margin-top:402px;width:99px;height:31px'><img width=99
height=31 src="SpringWebAppDoc.files/image008.png"></span><span
style='position:absolute;z-index:251688960;left:0px;margin-left:49px;
margin-top:231px;width:154px;height:22px'><img width=154 height=22
src="SpringWebAppDoc.files/image009.png"></span><span lang=EN-US><img border=0
width=511 height=443 id="図 2" src="SpringWebAppDoc.files/image010.png"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251693056;left:0px;
margin-left:420px;margin-top:211px;width:86px;height:31px'><img width=86
height=31 src="SpringWebAppDoc.files/image011.png"></span><span lang=EN-US><img
border=0 width=589 height=245 id="図 4" src="SpringWebAppDoc.files/image012.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251695104;left:0px;
margin-left:405px;margin-top:353px;width:90px;height:31px'><img width=90
height=31 src="SpringWebAppDoc.files/image013.png"></span><span lang=EN-US><img
border=0 width=589 height=392 id="図 5" src="SpringWebAppDoc.files/image014.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>完了</p>

<p class=MsoNormal><span style='position:absolute;z-index:251697152;left:0px;
margin-left:20px;margin-top:125px;width:318px;height:224px'><img width=318
height=224 src="SpringWebAppDoc.files/image015.png"></span><span lang=EN-US><img
border=0 width=419 height=345 id="図 6" src="SpringWebAppDoc.files/image016.png"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180270"><span lang=EN-US>4.4 </span>（手順４）初期プロジェクトをカスタマイス</a></h2>

<p class=MsoNormal>初期プロジェクトのままでは<span lang=EN-US>HelloWorld</span>ページは表示されませんので、次の<span
lang=EN-US>4</span>つのファイルを追加します。</p>

<p class=MsoNormal><span lang=EN-US>HelloControllerjava</span></p>

<p class=MsoNormal><span lang=EN-US>HelloWorld.html</span></p>

<p class=MsoNormal><span lang=EN-US>error.html</span></p>

<p class=MsoNormal><span lang=EN-US>index.html</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span style='font-family:"ＭＳ 明朝","serif"'>追加する場所は次図の通りです。</span></p>

<h3><a name="_Toc183180271"><span lang=EN-US>4.4.1 </span>カスタマイズの場所</a></h3>

<p class=MsoNormal><span style='position:absolute;z-index:251678720;left:0px;
margin-left:68px;margin-top:304px;width:144px;height:21px'><img width=144
height=21 src="SpringWebAppDoc.files/image017.png"></span><span
style='position:absolute;z-index:251676672;left:0px;margin-left:68px;
margin-top:287px;width:144px;height:21px'><img width=144 height=21
src="SpringWebAppDoc.files/image017.png"></span><span style='position:absolute;
z-index:251674624;left:0px;margin-left:68px;margin-top:252px;width:144px;
height:21px'><img width=144 height=21 src="SpringWebAppDoc.files/image017.png"></span><span
style='position:absolute;z-index:251672576;left:0px;margin-left:73px;
margin-top:196px;width:144px;height:21px'><img width=144 height=21
src="SpringWebAppDoc.files/image017.png"></span><span lang=EN-US><img border=0
width=399 height=508 id="図 13" src="SpringWebAppDoc.files/image018.png"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180272"><span lang=EN-US>4.4.2 </span>カスタマイズの内容</a></h3>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>HelloControllerjava</span></h4>

<p class=MsoNormal><span lang=EN-US>package com.example.hello;</span></p>

<p class=MsoNormal><span lang=EN-US>import
org.springframework.stereotype.Controller;</span></p>

<p class=MsoNormal><span lang=EN-US>import
org.springframework.web.bind.annotation.GetMapping;</span></p>

<p class=MsoNormal><span lang=EN-US>import
org.springframework.web.servlet.ModelAndView;</span></p>

<p class=MsoNormal><span lang=EN-US>@Controller</span></p>

<p class=MsoNormal><span lang=EN-US>public class HelloController {</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>           @GetMapping(&quot;hello&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>           public ModelAndView hello(ModelAndView
mav) {</span></p>

<p class=MsoNormal><span lang=EN-US>                      mav.setViewName(&quot;HelloWorld&quot;);</span></p>

<p class=MsoNormal><span lang=EN-US>                      return mav;</span></p>

<p class=MsoNormal><span lang=EN-US>           }</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（2） </span><span lang=EN-US>HelloWorld.html</span></h4>

<p class=MsoNormal><span lang=EN-US>&lt;!DOCTYPE html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;head&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;meta charset=&quot;UTF-8&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;title&gt;Insert title
here&lt;/title&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/head&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;body&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;h1&gt;HelloWorld !!&lt;/h1&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/body&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（3） </span><span lang=EN-US>error.html</span></h4>

<p class=MsoNormal><span lang=EN-US>&lt;!DOCTYPE html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;head&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;meta charset=&quot;UTF-8&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;title&gt;Insert title
here&lt;/title&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/head&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;body&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;h1&gt;</span>エラーページ<span lang=EN-US>&lt;/h1&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/body&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（4） </span><span lang=EN-US>index.html</span></h4>

<p class=MsoNormal><span lang=EN-US>&lt;!DOCTYPE html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;head&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;meta charset=&quot;UTF-8&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;title&gt;Insert title
here&lt;/title&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/head&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;body&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;h1&gt;</span>静的<span lang=EN-US>index.html</span>ページ<span
lang=EN-US>&lt;/h1&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/body&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/html&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180273"><span lang=EN-US>4.5 </span><span lang=EN-US>Web</span>アプリケーションを起動</a></h2>

<p class=MsoNormal><span lang=EN-US>Eclipse</span>のパッケージエクスプローラまたはプロジェクトエクスプローラで<span
lang=EN-US> hello </span>を右クリックします。</p>

<p class=MsoNormal>次図のように</p>

<p class=MsoNormal><span style='position:absolute;z-index:251681792;left:0px;
margin-left:329px;margin-top:682px;width:213px;height:21px'><img width=213
height=21 src="SpringWebAppDoc.files/image019.png"></span><span
style='position:absolute;z-index:251679744;left:0px;margin-left:28px;
margin-top:545px;width:98px;height:21px'><img width=98 height=21
src="SpringWebAppDoc.files/image020.png"></span><span lang=EN-US><img border=0
width=557 height=750 id="図 24" src="SpringWebAppDoc.files/image021.png"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Eclipse</span>のコンソールに次のようなログが表示され、<span
lang=EN-US>Web</span>アプリケーションが起動したことを確認できます。</p>

<p class=MsoNormal><span style='position:absolute;z-index:251682816;left:0px;
margin-left:411px;margin-top:271px;width:280px;height:18px'><img width=280
height=18 src="SpringWebAppDoc.files/image022.png"></span><span lang=EN-US><img
border=0 width=709 height=315 id="図 12" src="SpringWebAppDoc.files/image023.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180274"><span lang=EN-US>4.6 </span>結果を確認</a></h2>

<p class=MsoNormal>ブラウザを開いて次の<span lang=EN-US>URL</span>にアクセスします。</p>

<p class=MsoNormal><span lang=EN-US><a href="http://localhost:8080/"><span
style='color:blue'>http://localhost:8080/</span></a></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=312 height=41 id="図 21"
src="SpringWebAppDoc.files/image024.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><a href="http://localhost:8080/hello"><span
style='color:blue'>http://localhost:8080/hello</span></a></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=219 height=38 id="図 22"
src="SpringWebAppDoc.files/image025.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><a href="http://localhost:8080/hello999">http://localhost:8080/hello999</a></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=158 height=32 id="図 23"
src="SpringWebAppDoc.files/image026.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180275"><span lang=EN-US>4.7 </span><span lang=EN-US>Web</span>アプリケーションを停止</a></h2>

<p class=MsoNormal><span style='position:absolute;z-index:251684864;left:0px;
margin-left:509px;margin-top:24px;width:24px;height:23px'><img width=24
height=23 src="SpringWebAppDoc.files/image027.png"></span>いくつか方法があります。一つは次図の赤いボタン押下で停止します。</p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=726 height=177 id="図 26"
src="SpringWebAppDoc.files/image028.jpg"></span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251686912;left:0px;
margin-left:475px;margin-top:21px;width:144px;height:15px'><img width=144
height=15 src="SpringWebAppDoc.files/image029.png"></span><span lang=EN-US><img
border=0 width=726 height=41 id="図 28" src="SpringWebAppDoc.files/image030.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180276"><span lang=EN-US>5． </span><span lang=EN-US>Web</span>アプリケーションの設計と構造</a></h1>

<p class=MsoNormal>前章の「簡単な<span lang=EN-US>Web</span>アプリケーション」<span lang=EN-US>(Spring
+ Thymeleaf) </span>では<span lang=EN-US>,</span>最小限のリクエストとレスポンスを確認できました。しかし、ここから先を、自己流だけで機能を追加していっても、実用的な品質のアプリケーションを作成することは困難でしょう。通常は、すでに多くの開発者によって使用されている設計手法や構造パターンを参考にして設計や構造を決めていきます。</p>

<p class=MsoNormal><span lang=EN-US style='font-size:9.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=576 height=165
src="SpringWebAppDoc.files/image031.png"></span></p>

<p class=MsoNormal>次の一文は、エリックエヴァンスのドメイン駆動設計 日本語版第<span lang=EN-US>4</span>章から引用したものです。</p>

<p class=MsoNormal>～引用ここから～</p>

<p class=MsoNormal>輸送アプリケーションで、貨物の荷出し地を都市の一覧から選択するという、ユーザの簡単な操作をサポートしたい。そのためには、次の処理を実行するプログラムコードがなければならない。①スクリーンにウィジェットを描き、②選択できる都市をすべてデータベースに問い合わせて、③ユーザーの入力を解釈して検証し、④選択された都市を貨物と結び付け、⑤データベースへの変更をコミットする。このコードすべてが同じプログラムの一部になるが、輸送業というビジネスに関係するのは、そのごく一部にすぎない。</p>

<p class=MsoNormal>ソフトウェアプログラムには、さまざまな種類のタスクを実行する設計とコードがある。</p>

<p class=MsoNormal>ユーザ入力を受つけ、ビジネスロジックを実行し、データベースにアクセスして、ネットワークを通じて通信し、ユーザに情報を表示するといった具合である。したがって、各プログラム機能に含まれるコードは、かなりの量になる可能性がある。</p>

<p class=MsoNormal>～引用ここまで～</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>単純なプログラムですが、十分な分析や設計をしないで、<span lang=EN-US>HelloWorld</span>の延長のようなつもりで作成すると複雑で混沌とした<span
lang=EN-US>Web</span>アプリケーションになるでしょう。当然、拡張性や保守性の低いシステムとなります。</p>

<p class=MsoNormal>そのためにはアプリケーションアーキテクチャというものを理解し適切に使用していく必要があります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>以下の用語は、すべて<span lang=EN-US>Web</span>アプリケーションの設計や構造に関するものであり、互いに関連しています。それぞれが異なる視点からアプリケーションの構造を示していますが、目的は一貫して、コードの可読性や保守性、拡張性を高めることです。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180277"><span lang=EN-US>5.1 </span>アプリケーションアーキテクチャ</a></h2>

<p class=MsoNormal>アプリケーションアーキテクチャとは、ソフトウェア全体の構造を定義し、どのように機能が分割されているか、各コンポーネントがどのように相互作用するかを示します。<span
lang=EN-US>Web</span>アプリケーションでは、複雑な要件を効率よく満たすために、設計時に適切なアーキテクチャが選ばれます。以下に説明する<span
lang=EN-US>MVC</span>、レイヤードアーキテクチャ、クリーンアーキテクチャはすべて、異なる種類のアプリケーションアーキテクチャです。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180278"><span lang=EN-US>5.2 </span><span lang=EN-US>MVC</span>（<span
lang=EN-US>Model View Controller</span>）</a></h2>

<p class=MsoNormal><span lang=EN-US>MVC</span>は、<span lang=EN-US>Web</span>アプリケーションの構造を「<span
lang=EN-US>Model</span>（データの管理）」「<span lang=EN-US>View</span>（ユーザーインターフェース）」「<span
lang=EN-US>Controller</span>（ロジックと指令）」の<span lang=EN-US>3</span>つに分ける設計パターンです。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Model: </span>データやビジネスロジックを担当します。データベースの操作やデータの整形などを行います。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>View: </span>ユーザーに表示する部分です。<span lang=EN-US>HTML</span>やテンプレートエンジンなどで、ユーザーインターフェースを生成します。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Controller: </span>ユーザーの入力を受け取り、<span
lang=EN-US>Model</span>と<span lang=EN-US>View</span>を制御します。ユーザーからのリクエストを処理し、適切なレスポンスを返す役割を担います。</h6>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180279"><span lang=EN-US>5.3 </span>レイヤードアーキテクチャ</a></h2>

<p class=MsoNormal>レイヤードアーキテクチャは、アプリケーションを層（レイヤー）ごとに分割する設計です。一般的には、以下のような層に分けられます<span
lang=EN-US>:</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>プレゼンテーション層<span lang=EN-US>: </span>ユーザーインターフェースを扱います（<span
lang=EN-US>HTML</span>、<span lang=EN-US>CSS</span>、<span lang=EN-US>JavaScript</span>など）。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>アプリケーション層<span lang=EN-US>: </span>ビジネスロジックを実行し、アプリケーションの操作を管理します。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>ドメイン層<span lang=EN-US>: </span>ビジネスルールやデータの処理を担当します。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>データアクセス層<span lang=EN-US>: </span>データベースとのやり取りを行います。</h6>

<p class=MsoNormal>このように層を分けることで、責任の分離が明確になり、保守や拡張がしやすくなります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180280"><span lang=EN-US>5.4 </span>クリーンアーキテクチャ</a></h2>

<p class=MsoNormal>クリーンアーキテクチャは、アプリケーションを柔軟かつ保守しやすくすることを目指した設計思想です。ヘキサゴナルアーキテクチャ、オニオンアーキテクチャなどの出現を受けてこれらの概念を統合しようとしたものです。ソフトウェアの依存関係が一方向（内側から外側）になるように設計します。基本的な構造は以下の通りです<span
lang=EN-US>:</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>エンティティ<span lang=EN-US>: </span>ビジネスルールやデータモデルを表現します。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>ユースケース<span lang=EN-US>: </span>システムがユーザーに提供するサービスや機能です。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>インターフェース（外側の層）<span lang=EN-US>: </span>プレゼンテーション層やデータベース層といった、システム外部とやり取りする部分です。</h6>

<p class=MsoNormal>クリーンアーキテクチャの特徴は、外部依存（データベース、<span lang=EN-US>UI</span>、フレームワークなど）からビジネスロジックを分離することにより、変更に強い設計を実現する点です。</p>

<p class=MsoNormal>重要な関連概念</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>SOLID</span>原則<span lang=EN-US>: </span>オブジェクト指向設計の基本的な<span
lang=EN-US>5</span>つの原則で、保守性や拡張性を高めるためのガイドラインです。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>依存性の逆転<span lang=EN-US>: </span>クリーンアーキテクチャで重要な概念であり、具体的な実装がビジネスロジックに依存するのではなく、ビジネスロジックがインターフェースに依存するという考え方です。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>依存性注入（<span lang=EN-US>DI</span>）<span lang=EN-US>: </span>アプリケーションの依存関係を外部から注入することで、モジュール間の結合を緩める設計手法です。<span
lang=EN-US>Spring</span>フレームワークなどでよく使われます。</h6>

<p class=MsoNormal>これらの概念は、<span lang=EN-US>Web</span>アプリケーション開発におけるコードの可読性、テストのしやすさ、保守性を向上させるために非常に役立ちます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180281"><span lang=EN-US>6． </span><span lang=EN-US>Java</span>パッケージ構成の例</a></h1>

<p class=MsoNormal>本章の内容は例です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180282"><span lang=EN-US>6.1 </span>層型アーキテクチャ</a></h2>

<p class=MsoNormal>層毎に役割を明確に分けます。トランザクション・スクリプトと呼ばれるアンチパターンとならないように、そして、低品質で保守や拡張が困難な混沌としたソフトウェアとならないように、適切に役割を分けます。</p>

<p class=MsoNormal>各層の名前や構成はチームで決めていきます。必要な場合はリファクタリングします。</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=208 valign=top style='width:155.95pt;border:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>名前</p>
  </td>
  <td width=496 valign=top style='width:371.9pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>役割</p>
  </td>
 </tr>
 <tr style='height:34.6pt'>
  <td width=208 valign=top style='width:155.95pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt;height:34.6pt'>
  <p class=MsoNormal>プレゼンテーション層</p>
  <p class=MsoNormal>（<span lang=EN-US>UI</span>層）</p>
  </td>
  <td width=496 valign=top style='width:371.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt;height:34.6pt'>
  <p class=MsoNormal>アクター（人間や別のコンピュータ）と情報を相互通信します。</p>
  </td>
 </tr>
 <tr style='height:34.2pt'>
  <td width=208 valign=top style='width:155.95pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt;height:34.2pt'>
  <p class=MsoNormal>アプリケーション層</p>
  <p class=MsoNormal>（ユースケ―ス層）</p>
  </td>
  <td width=496 valign=top style='width:371.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt;height:34.2pt'>
  <p class=MsoNormal>ユースケ―ス、シナリオを実行します。</p>
  </td>
 </tr>
 <tr>
  <td width=208 valign=top style='width:155.95pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>ドメイン層</p>
  </td>
  <td width=496 valign=top style='width:371.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>ドメイン駆動設計などでモデリングしたクラス群によってドメインロジックを提供します。</p>
  </td>
 </tr>
 <tr>
  <td width=208 valign=top style='width:155.95pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>インフラストラクチャ層</p>
  </td>
  <td width=496 valign=top style='width:371.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>上位のレイヤを支える一般的な技術機能（永続化機能やデータ送受信機能など）を提供します。</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180283"><span lang=EN-US>6.2 </span>レイヤードアーキテクチャ的な例</a></h2>

<p class=MsoNormal>├─<span lang=EN-US>java</span></p>

<p class=MsoNormal>│<span lang=EN-US>  </span>└─<span lang=EN-US>com</span></p>

<p class=MsoNormal>│<span lang=EN-US>      </span>└─<span lang=EN-US>example</span></p>

<p class=MsoNormal>│<span lang=EN-US>          </span>└─<span lang=EN-US>mainbank</span></p>

<p class=MsoNormal>│<span lang=EN-US>              </span>├─<span lang=EN-US>presen
(</span>プレゼンテーション層（コントローラー、ビュー）<span lang=EN-US>)</span></p>

<p class=MsoNormal>│<span lang=EN-US>              </span>├─<span lang=EN-US>appl
(</span>アプリケーション層（ユースケース、サービス）<span lang=EN-US>)</span></p>

<p class=MsoNormal>│<span lang=EN-US>              </span>├─<span lang=EN-US>config</span></p>

<p class=MsoNormal>│<span lang=EN-US>              </span>├─<span lang=EN-US>domain</span></p>

<p class=MsoNormal>│<span lang=EN-US>              </span>└─<span lang=EN-US>infra
(infrastructure)</span></p>

<p class=MsoNormal>└─<span lang=EN-US>resources</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>├─<span lang=EN-US>static</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>│<span lang=EN-US>  </span>└─<span
lang=EN-US>css</span></p>

<p class=MsoNormal><span lang=EN-US>    </span>└─<span lang=EN-US>templates</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180284"><span lang=EN-US>6.3 </span>クリーンアーキテクチャ的な例</a></h2>

<p class=MsoNormal>クリーンアーキテクチャでは、依存関係の方向を意識し、ビジネスロジックを中心に据えるような構成が推奨されます。</p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>├─</span><span
lang=EN-US>java</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>  </span><span lang=EN-US style='font-family:"Century","serif"'>└─</span><span
lang=EN-US>com</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>      </span><span lang=EN-US style='font-family:"Century","serif"'>└─</span><span
lang=EN-US>example</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>          </span><span lang=EN-US style='font-family:"Century","serif"'>└─</span><span
lang=EN-US>mainbank</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>├─</span><span
lang=EN-US>config</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>├─</span><span
lang=EN-US>domain</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>  </span><span lang=EN-US style='font-family:"Century","serif"'>├─</span><span
lang=EN-US>model</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>  </span><span lang=EN-US style='font-family:"Century","serif"'>└─</span><span
lang=EN-US>repository (repository interface)</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>├─</span><span
lang=EN-US>application</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>  </span><span lang=EN-US style='font-family:"Century","serif"'>└─</span><span
lang=EN-US>usecase (business logic)</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>├─</span><span
lang=EN-US>infra (implementation of repository, external services, etc.)</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>├─</span><span
lang=EN-US>adapter (controllers, gateways, and presenters)</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>│</span><span
lang=EN-US>              </span><span lang=EN-US style='font-family:"Century","serif"'>└─</span><span
lang=EN-US>shared (common utilities)</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'>└─</span><span
lang=EN-US>resources</span></p>

<p class=MsoNormal><span lang=EN-US>    </span><span lang=EN-US
style='font-family:"Century","serif"'>├─</span><span lang=EN-US>static</span></p>

<p class=MsoNormal><span lang=EN-US>    </span><span lang=EN-US
style='font-family:"Century","serif"'>└─</span><span lang=EN-US>templates</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<ul style='margin-top:0mm' type=disc>
 <li class=MsoNormal><span lang=EN-US>domain: </span>ビジネスルールに直接関係するクラス（エンティティ、バリューオブジェクト、リポジトリインターフェース）を配置します。</li>
 <li class=MsoNormal><span lang=EN-US>application: </span>ユースケースやビジネスロジックを表現するクラスを配置します。</li>
 <li class=MsoNormal><span lang=EN-US>infra: </span>外部システムやデータベースに依存する実装をここに置きますが、<span
     lang=EN-US>domain</span>に直接依存させない形にします。</li>
 <li class=MsoNormal><span lang=EN-US>adapter: </span>プレゼンテーション層や外部インターフェースに関する処理をまとめます。</li>
</ul>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180285"><span lang=EN-US>7． </span>取引銀行管理システム（サンプルアプリ）</a></h1>

<h2><a name="_Toc183180286"><span lang=EN-US>7.1 </span>アプリケーションの要件</a></h2>

<p class=MsoNormal>自社が取引する銀行の情報を管理する。</p>

<p class=MsoNormal>【銀行の種類】</p>

<p class=MsoNormal><span lang=EN-US>   </span>・都市銀行</p>

<p class=MsoNormal><span lang=EN-US>   </span>・地方銀行</p>

<p class=MsoNormal><span lang=EN-US>   </span>・ネット銀行</p>

<p class=MsoNormal>【取引の種類】</p>

<p class=MsoNormal><span lang=EN-US>  </span>・融資<span lang=EN-US> (Loan)</span></p>

<p class=MsoNormal><span lang=EN-US>  </span>・預金<span lang=EN-US> (Deposit)</span></p>

<p class=MsoNormal><span lang=EN-US>  </span>・送金</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180287"><span lang=EN-US>7.2 </span>ユースケ―ス</a></h2>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=36 valign=top style='width:26.7pt;border:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><span lang=EN-US>1</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>ユースケース名</p>
  </td>
  <td width=554 valign=top style='width:415.35pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>取引銀行を登録する。</p>
  </td>
 </tr>
 <tr>
  <td width=36 valign=top style='width:26.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>アクター</p>
  </td>
  <td width=554 valign=top style='width:415.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>経理部員。</p>
  </td>
 </tr>
 <tr>
  <td width=36 valign=top style='width:26.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>事前条件</p>
  </td>
  <td width=554 valign=top style='width:415.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>登録する取引銀行は未登録であること。</p>
  </td>
 </tr>
 <tr>
  <td width=36 valign=top style='width:26.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>事後条件</p>
  </td>
  <td width=554 valign=top style='width:415.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>エラーなしの場合は、登録済みとなること。</p>
  <p class=MsoNormal>エラーありの場合は、未登録のままであること。</p>
  </td>
 </tr>
 <tr>
  <td width=36 valign=top style='width:26.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>主シナリオ</p>
  </td>
  <td width=554 valign=top style='width:415.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>1. </span>ブラウザから所定の<span lang=EN-US>URL</span>にアクセスし、取引銀行一覧画面を開く。</p>
  <p class=MsoNormal><span lang=EN-US>2. </span>新規登録ボタンを押下して新規登録画面を開く。</p>
  <p class=MsoNormal><span lang=EN-US>3. </span>取引銀行名、銀行種類、取引種類を入力する。</p>
  <p class=MsoNormal><span lang=EN-US>4. </span>保存ボタンを押下する。</p>
  </td>
 </tr>
 <tr>
  <td width=36 valign=top style='width:26.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>副シナリオ</p>
  </td>
  <td width=554 valign=top style='width:415.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>保存ボタン押下でエラーメッセージが表示された場合</p>
  </td>
 </tr>
 <tr>
  <td width=36 valign=top style='width:26.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=554 valign=top style='width:415.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>エラーを修正し、再度保存ボタンを押下する。</p>
  <p class=MsoNormal>または、キャンセルボタン押下で終了する。</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180288"><span lang=EN-US>7.3 </span>プロジェクト作成時の手順</a></h2>

<p class=MsoNormal>サンプルアプリ作成時の<span lang=EN-US>Initializr</span>の設定内容と<span
lang=EN-US>GitHub</span>で管理する手順について説明します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180289"><span lang=EN-US>7.3.1 </span><span lang=EN-US>Initializr</span>で初期プロジェクトを作成</a></h3>

<p class=MsoNormal><span lang=EN-US><img border=0 width=699 height=467 id="図 76"
src="SpringWebAppDoc.files/image032.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180290"><span lang=EN-US>7.3.2 </span><span lang=EN-US>GitHub</span>でリポジトリ<span
lang=EN-US> mainbank </span>を作成（任意：必要な方のみ）</a></h3>

<p class=MsoNormal>これは<span lang=EN-US>GitHub</span>でソースコードを管理したい場合のみ必要です。後から<span
lang=EN-US>GitHub</span>管理もできます。</p>

<p class=MsoNormal><span lang=EN-US>Code</span>ボタンから「<span lang=EN-US>Open with
GitHub Desktop</span>」を選択すると自分の<span lang=EN-US>PC</span>にインストール済みの<span
lang=EN-US>GitHub Desktop</span>が起動するので、<span lang=EN-US>GitHub Desktop </span>を操作して、リポジトリをクローンします。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251722752;left:0px;
margin-left:399px;margin-top:128px;width:85px;height:37px'><img width=85
height=37 src="SpringWebAppDoc.files/image033.png"></span><span
style='position:absolute;z-index:251723776;left:0px;margin-left:176px;
margin-top:329px;width:196px;height:36px'><img width=196 height=36
src="SpringWebAppDoc.files/image034.png"></span><span lang=EN-US><img border=0
width=685 height=401 id="図 77" src="SpringWebAppDoc.files/image035.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>GitHub Desktop</span>画面が開きます</p>

<p class=MsoNormal><span style='position:absolute;z-index:251724800;left:0px;
margin-left:29px;margin-top:313px;width:164px;height:31px'><img width=164
height=31 src="SpringWebAppDoc.files/image036.png"></span><span
style='position:absolute;z-index:251725824;left:0px;margin-left:213px;
margin-top:368px;width:116px;height:36px'><img width=116 height=36
src="SpringWebAppDoc.files/image037.png"></span><span lang=EN-US><img border=0
width=708 height=406 id="図 78" src="SpringWebAppDoc.files/image038.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>Clone </span>すると<span lang=EN-US> Local
Path </span>のフォルダが自動生成されます。（そのつもりで指定してください）</p>

<p class=MsoNormal>次のような結果になります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=263 height=146 id="図 79"
src="SpringWebAppDoc.files/image039.png"></span></p>

<p class=MsoNormal>カレントブランチは、デフォルトの<span lang=EN-US>main</span>ブランチになっています。</p>

<p class=MsoNormal><span style='position:absolute;z-index:251735040;left:0px;
margin-left:257px;margin-top:22px;width:103px;height:24px'><img width=103
height=24 src="SpringWebAppDoc.files/image040.png"></span><span lang=EN-US><img
border=0 width=651 height=306 id="図 80" src="SpringWebAppDoc.files/image041.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251734016;left:0px;
margin-left:2px;margin-top:304px;width:53px;height:24px'><img width=53
height=24 src="SpringWebAppDoc.files/image042.png"></span><span
style='position:absolute;z-index:251732992;left:0px;margin-left:95px;
margin-top:395px;width:111px;height:33px'><img width=111 height=33
src="SpringWebAppDoc.files/image043.png"></span><span lang=EN-US><img border=0
width=331 height=447 id="図 81" src="SpringWebAppDoc.files/image044.jpg"></span></p>

<p class=MsoNormal>この例では、<span lang=EN-US>main </span>ブランチから<span lang=EN-US>
develop </span>ブランチを作成し、<span lang=EN-US>develop </span>をカレントブランチにしました。</p>

<p class=MsoNormal>ローカルフォルダに初期プロジェクトを解凍した後の<span lang=EN-US> mainbank </span>を移動（コピー＆貼付け）します。</p>

<p class=MsoNormal>この辺の手順は色々なやり方あると思います。</p>

<p class=MsoNormal><span style='position:absolute;z-index:251726848;left:0px;
margin-left:58px;margin-top:83px;width:100px;height:25px'><img width=100
height=25 src="SpringWebAppDoc.files/image045.png"></span><span lang=EN-US><img
border=0 width=268 height=166 id="図 82" src="SpringWebAppDoc.files/image046.png"></span></p>

<p class=MsoNormal><span lang=EN-US>GitHub Desktop</span>の状態</p>

<p class=MsoNormal><span style='position:absolute;z-index:251731968;left:0px;
margin-left:2px;margin-top:279px;width:285px;height:124px'><img width=285
height=124 src="SpringWebAppDoc.files/image047.png"></span><span lang=EN-US><img
border=0 width=589 height=405 id="図 83" src="SpringWebAppDoc.files/image048.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>Commit</span>コメントを入力 →<span lang=EN-US>
Commit to develop </span>→<span lang=EN-US> Push origin </span>→<span
lang=EN-US> Create Pull Request</span></p>

<p class=MsoNormal><span lang=EN-US> </span>→ ブラウザで<span lang=EN-US>Github</span>ページが開く</p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=697 height=299 id="図 84"
src="SpringWebAppDoc.files/image049.jpg"></span></p>

<p class=MsoNormal>下の方にスクロールして<span lang=EN-US> Create pull request </span>を押下します</p>

<p class=MsoNormal><span style='position:absolute;z-index:251730944;left:0px;
margin-left:377px;margin-top:39px;width:207px;height:43px'><img width=207
height=43 src="SpringWebAppDoc.files/image050.png"></span><span lang=EN-US><img
border=0 width=589 height=141 id="図 85" src="SpringWebAppDoc.files/image051.jpg"></span></p>

<p class=MsoNormal>少し下にスクロール</p>

<p class=MsoNormal><span style='position:absolute;z-index:251729920;left:0px;
margin-left:74px;margin-top:362px;width:198px;height:43px'><img width=198
height=43 src="SpringWebAppDoc.files/image052.png"></span><span lang=EN-US><img
border=0 width=613 height=443 id="図 86" src="SpringWebAppDoc.files/image053.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>Merge pull request</span>を押下</p>

<p class=MsoNormal><span style='position:absolute;z-index:251728896;left:0px;
margin-left:85px;margin-top:220px;width:131px;height:38px'><img width=131
height=38 src="SpringWebAppDoc.files/image054.png"></span><span lang=EN-US><img
border=0 width=590 height=279 id="図 87" src="SpringWebAppDoc.files/image055.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Confirm merge</span>を押下</p>

<p class=MsoNormal><span style='position:absolute;z-index:251727872;left:0px;
margin-left:-1px;margin-top:36px;width:93px;height:38px'><img width=93
height=38 src="SpringWebAppDoc.files/image056.png"></span><span lang=EN-US><img
border=0 width=589 height=199 id="図 88" src="SpringWebAppDoc.files/image057.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>Merged</span>が表示されたらマージ成功です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Eclipse</span>にインポートします。</p>

<p class=MsoNormal><span lang=EN-US>Eclipse </span>ファイルメニュー → インポート → 既存<span
lang=EN-US>Maven</span>プロジェクト → ルートディレクトリとして<span lang=EN-US> mainbank </span>フォルダを選択
→ 完了。</p>

<p class=MsoNormal>このインポートは<span lang=EN-US> mainbank </span>を解凍し配置した後でも問題ありません。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180291"><span lang=EN-US>7.4 </span>ドメインモデルと永続化（継承の永続化戦略）</a></h2>

<p class=MsoNormal>本書では<span lang=EN-US>Spring Boot JPA + MySQL</span>を使用します。<span
lang=EN-US>MySQL</span>については後述します。また、取引銀行管理に登場する一部のドメインモデル名を使いますが、本セクションの目的は、継承関連を持つエンティティ（クラス）の永続化戦略です。そのため、エンティティのプロパティや振舞いはほぼ省略しています。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>（クラス図）</p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=103 height=212 id="図 37"
src="SpringWebAppDoc.files/image058.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>（<span lang=EN-US>Java</span>コード）</p>

<p class=MsoNormal><span lang=EN-US>package com.example.mainbank.domain;</span></p>

<p class=MsoNormal><span lang=EN-US>import jakarta.persistence.Entity;</span></p>

<p class=MsoNormal><span lang=EN-US>import jakarta.persistence.GeneratedValue;</span></p>

<p class=MsoNormal><span lang=EN-US>import jakarta.persistence.GenerationType;</span></p>

<p class=MsoNormal><span lang=EN-US>import jakarta.persistence.Id;</span></p>

<p class=MsoNormal><span lang=EN-US>import jakarta.persistence.Inheritance;</span></p>

<p class=MsoNormal><span lang=EN-US>import jakarta.persistence.InheritanceType;</span></p>

<p class=MsoNormal><span lang=EN-US>/**</span></p>

<p class=MsoNormal><span lang=EN-US> * </span>エンティの基底クラス</p>

<p class=MsoNormal><span lang=EN-US> */</span></p>

<p class=MsoNormal><span lang=EN-US>@Entity</span></p>

<p class=MsoNormal><span lang=EN-US>@Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)</span></p>

<p class=MsoNormal><span lang=EN-US>public abstract class BaseEntity {</span></p>

<p class=MsoNormal><span lang=EN-US>           @Id</span></p>

<p class=MsoNormal><span lang=EN-US>           //@GeneratedValue(strategy=GenerationType.IDENTITY)</span></p>

<p class=MsoNormal><span lang=EN-US>           @GeneratedValue(strategy=GenerationType.TABLE)</span></p>

<p class=MsoNormal><span lang=EN-US>           protected Long id;</span></p>

<p class=MsoNormal><span lang=EN-US>           public Long getId() {</span></p>

<p class=MsoNormal><span lang=EN-US>                      return id;</span></p>

<p class=MsoNormal><span lang=EN-US>           }</span></p>

<p class=MsoNormal><span lang=EN-US>           public void setId(Long id) {</span></p>

<p class=MsoNormal><span lang=EN-US>                      this.id = id;</span></p>

<p class=MsoNormal><span lang=EN-US>           }</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>package com.example.mainbank.domain;</span></p>

<p class=MsoNormal><span lang=EN-US>import jakarta.persistence.Entity;</span></p>

<p class=MsoNormal><span lang=EN-US>/**</span></p>

<p class=MsoNormal><span lang=EN-US> * </span>取引銀行</p>

<p class=MsoNormal><span lang=EN-US> */</span></p>

<p class=MsoNormal><span lang=EN-US>@Entity</span></p>

<p class=MsoNormal><span lang=EN-US>public class MainBank extends BaseEntity {       </span></p>

<p class=MsoNormal><span lang=EN-US>           private String name;</span></p>

<p class=MsoNormal><span lang=EN-US>           //</span>コンストラクタ</p>

<p class=MsoNormal><span lang=EN-US>           public MainBank() {</span></p>

<p class=MsoNormal><span lang=EN-US>                      this.name =
&quot;&quot;;</span></p>

<p class=MsoNormal><span lang=EN-US>           }</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<span lang=EN-US style='font-size:10.5pt;font-family:メイリオ'><br clear=all
style='page-break-before:always'>
</span>

<p class=MsoNormal align=left style='text-align:left'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>（<span lang=EN-US>MySQL</span>データベーステーブルの状態）</p>

<p class=MsoNormal><span style='position:absolute;z-index:251737088;left:0px;
margin-left:12px;margin-top:164px;width:220px;height:28px'><img width=220
height=28 src="SpringWebAppDoc.files/image059.png"></span><span lang=EN-US><img
border=0 width=231 height=555 id="図 44" src="SpringWebAppDoc.files/image060.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>（<span lang=EN-US>pom.xml</span>）</p>

<p class=MsoNormal><span lang=EN-US>&lt;?xml version=&quot;1.0&quot;
encoding=&quot;UTF-8&quot;?&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;project
xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></p>

<p class=MsoNormal><span lang=EN-US>   
xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0
https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>   
&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;parent&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>       
&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>       
&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>       
&lt;version&gt;3.3.4&lt;/version&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;relativePath/&gt; &lt;!--
lookup parent from repository --&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;/parent&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;groupId&gt;com.example&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>   
&lt;artifactId&gt;mainbank&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>   
&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;name&gt;mainbank&lt;/name&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;description&gt;Main Bank
Management&lt;/description&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;url/&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;licenses&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;license/&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;/licenses&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;developers&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;developer/&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;/developers&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;scm&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;connection/&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;developerConnection/&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;tag/&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;url/&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;/scm&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;properties&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>       
&lt;java.version&gt;17&lt;/java.version&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;/properties&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;dependencies&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;scope&gt;runtime&lt;/scope&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;optional&gt;true&lt;/optional&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;groupId&gt;com.h2database&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;artifactId&gt;h2&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;scope&gt;runtime&lt;/scope&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;groupId&gt;com.mysql&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;scope&gt;runtime&lt;/scope&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>           
&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>            &lt;scope&gt;test&lt;/scope&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/dependency&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;/dependencies&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;build&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;plugins&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>            &lt;plugin&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>               
&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>               
&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>            &lt;/plugin&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>        &lt;/plugins&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;/build&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/project&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>ここまで、クラス毎にテーブルを作成する戦略ですです。</p>

<p class=MsoNormal>ただし、<span lang=EN-US>@GeneratedValue(strategy =
GenerationType.IDENTITY)</span>と指定するとエラーになります。</p>

<p class=MsoNormal>原因は、<span lang=EN-US>InheritanceType.TABLE_PER_CLASS </span>と<span
lang=EN-US> GenerationType.IDENTITY </span>の組み合わせにあります。</p>

<p class=MsoNormal>正しい指定方法は、<span lang=EN-US>@GeneratedValue(strategy =
GenerationType.TABLE)</span>です。</p>

<p class=MsoNormal>このように指定することで、<span lang=EN-US>Hibernate </span>がテーブル<span
lang=EN-US> (hibernate_sequences) </span>を作成し、そこから<span lang=EN-US> ID </span>を生成するので、<span
lang=EN-US>TABLE_PER_CLASS </span>と互換性があり、<span lang=EN-US>3</span>つのテーブルが正しく作成されます。</p>

<p class=MsoNormal>この戦略は適切な解決策と言えます。ただし、<span lang=EN-US>ID </span>テーブルが追加で作成されることに注意が必要です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>この他の戦略としては、</p>

<p class=MsoNormal><span lang=EN-US>InheritanceType.JOINED </span>や<span
lang=EN-US> InheritanceType.SINGLE_TABLE </span>があります。この戦略も検討可能です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>PostgreSQL </span>の場合は、</p>

<p class=MsoNormal><span lang=EN-US>PostgreSQL </span>は<span lang=EN-US>
IDENTITY </span>戦略と<span lang=EN-US> TABLE_PER_CLASS </span>の組み合わせが<span
lang=EN-US> MySQL </span>と同様に問題を引き起こす可能性があります。</p>

<p class=MsoNormal>しかし、<span lang=EN-US>PostgreSQL </span>のシーケンスは<span
lang=EN-US> MySQL </span>より柔軟なので、次の戦略を推奨します。</p>

<p class=MsoNormal><span lang=EN-US>GenerationType.SEQUENCE</span>：<span
lang=EN-US>PostgreSQL </span>はシーケンスに適しており、<span lang=EN-US>Hibernate </span></p>

<p class=MsoNormal>がシーケンスを自動で管理します。この場合、データベース側での追加のシーケンス作成が不要となり、効率的です。</p>

<p class=MsoNormal>例：</p>

<p class=MsoNormal><span lang=EN-US>@GeneratedValue(strategy =
GenerationType.SEQUENCE, generator = &quot;your_sequence&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>@SequenceGenerator(name =
&quot;your_sequence&quot;, sequenceName = &quot;your_sequence_name&quot;,
allocationSize = 1)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>まとめ</p>

<p class=MsoNormal><span lang=EN-US>MySQL </span>では、<span lang=EN-US>GenerationType.TABLE
</span>と<span lang=EN-US> TABLE_PER_CLASS </span>の組み合わせが適切です。</p>

<p class=MsoNormal><span lang=EN-US>PostgreSQL </span>では、<span lang=EN-US>GenerationType.SEQUENCE
</span>の使用をお勧めします。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180292"><span lang=EN-US>8． </span><span lang=EN-US>Spring</span>依存性注入とは</a></h1>

<p class=MsoNormal>依存性注入 <span lang=EN-US>(DI : Dependency Injection</span>）は、<span
lang=EN-US>Spring</span>フレームワークの中心的な機能で、オブジェクト同士の依存関係を効率的に管理する方法です。オブジェクトが他のオブジェクトに依存する際、その依存関係を外部から「注入」することで、コードを柔軟にします。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180293"><span lang=EN-US>8.1 </span><span lang=EN-US>DI</span>の基本的な考え方</a></h2>

<p class=MsoNormal>通常、オブジェクトが別のオブジェクトを必要とする場合、そのオブジェクトを自分で作成します。しかし、これでは依存関係が強くなり、コードの再利用やテストが難しくなります。<span
lang=EN-US>DI</span>を使うと、必要な依存オブジェクトを外部（コンテナ）から提供されるため、オブジェクト間の結びつきが緩やかになります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180294"><span lang=EN-US>8.2 </span><span lang=EN-US>DI</span>の例</a></h2>

<p class=MsoNormal>例えば、以下のようなクラスがあるとします。</p>

<p class=MsoNormal><span lang=EN-US>public class Service {</span></p>

<p class=MsoNormal><span lang=EN-US>    private Repository repository;</span></p>

<p class=MsoNormal><span lang=EN-US>    public Service(Repository repository) {</span></p>

<p class=MsoNormal><span lang=EN-US>        this.repository = repository;</span></p>

<p class=MsoNormal><span lang=EN-US>    }</span></p>

<p class=MsoNormal><span lang=EN-US>    public void performTask() {</span></p>

<p class=MsoNormal><span lang=EN-US>        repository.save();</span></p>

<p class=MsoNormal><span lang=EN-US>    }</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>Service</span>クラスは<span lang=EN-US>Repository</span>クラスに依存しています。通常は<span
lang=EN-US>Repository</span>のインスタンスを<span lang=EN-US>Service</span>クラス内で生成しますが、<span
lang=EN-US>Spring</span>では<span lang=EN-US>Service</span>のコンストラクタに<span
lang=EN-US>Repository</span>を渡すことで依存性を外部から注入します。</p>

<p class=MsoNormal>例</p>

<p class=MsoNormal><span lang=EN-US>this.repository = new ConRepository();</span></p>

<p class=MsoNormal>とすると、<span lang=EN-US>Service</span>クラスは、<span lang=EN-US>Repository</span>インタフェースを実装した具象クラス<span
lang=EN-US>ConRepository</span>と強く結びついてしまいます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180295"><span lang=EN-US>8.3 </span><span lang=EN-US>DI</span>の仕組み</a></h2>

<p class=MsoNormal><span lang=EN-US>Spring</span>では、<span lang=EN-US>DI</span>を使ってオブジェクトの依存関係を設定できます。主な注入方法は<span
lang=EN-US>3</span>つあります。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>コンストラクタインジェクション</h6>

<p class=MsoNormal>コンストラクタを通じて依存オブジェクトを注入する方法です。上記の例がこれに該当します。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>セッターインジェクション</h6>

<p class=MsoNormal>セッターメソッドを使って依存オブジェクトを注入します。</p>

<p class=MsoNormal><span lang=EN-US>public class Service {</span></p>

<p class=MsoNormal><span lang=EN-US>    private Repository repository;</span></p>

<p class=MsoNormal><span lang=EN-US>    public void setRepository(Repository
repository) {</span></p>

<p class=MsoNormal><span lang=EN-US>        this.repository = repository;</span></p>

<p class=MsoNormal><span lang=EN-US>    }</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>フィールドインジェクション</h6>

<p class=MsoNormal>フィールドに直接注入する方法で、<span lang=EN-US>@Autowired</span>アノテーションを使います。</p>

<p class=MsoNormal><span lang=EN-US>public class Service {</span></p>

<p class=MsoNormal><span lang=EN-US>    @Autowired</span></p>

<p class=MsoNormal><span lang=EN-US>    private Repository repository;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180296"><span lang=EN-US>8.4 </span><span lang=EN-US>DI</span>のメリット</a></h2>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>テストがしやすい<span lang=EN-US>: </span>依存関係を外部から注入するため、テスト時にモックオブジェクトを簡単に差し替えることができます。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>コードの再利用性が高まる<span lang=EN-US>: </span>依存オブジェクトを外部から渡すことで、同じクラスを異なるシチュエーションで再利用できます。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>結合度が低くなる<span lang=EN-US>: </span>クラス間の依存関係を疎結合に保つことができ、コードが柔軟で変更に強くなります。</h6>

<p class=MsoNormal>依存性注入は、より柔軟で保守性の高いアプリケーションを作るための非常に重要な概念です。<span lang=EN-US>Spring</span>フレームワークはこの仕組みを自動的に管理してくれます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180297"><span lang=EN-US>8.5 </span>依存性とは</a></h2>

<p class=MsoNormal>「依存性」とは、何かが他の何かに頼って動く関係のことです。例えば、車がガソリンに「依存」しているとしましょう。車はガソリンがないと動かないので、ガソリンに頼っている、つまり依存しているというわけです。</p>

<p class=MsoNormal>ソフトウェアでも、あるプログラム（車）が他のプログラム（ガソリン）を必要として動作する場合、その<span
lang=EN-US>2</span>つの間に「依存性」があるといいます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180298"><span lang=EN-US>8.6 </span>注入とは</a></h2>

<p class=MsoNormal>「注入」とは、必要なものを外から与えることです。車の例でいうと、車がガソリンスタンドで給油されるように、外からガソリンを「注入」されることです。つまり、車は自分でガソリンを作るのではなく、誰かがガソリンを入れてあげている状態です。</p>

<p class=MsoNormal>ソフトウェアの場合も同様で、必要なプログラム（例えば車でいうガソリン）を別のプログラムに「注入」して、うまく動くようにします。</p>

<h2 style='margin-left:0mm;text-indent:0mm'><span lang=EN-US>&nbsp;</span></h2>

<p class=MsoNormal>依存性は、「あるものが他のものに頼っている関係」です。例えば、車がガソリンに頼って動いている状態。</p>

<p class=MsoNormal>注入は、「必要なものを外から与えること」です。車が自分でガソリンを用意するのではなく、外からガソリンを入れてもらうイメージです。</p>

<p class=MsoNormal>このように考えると、依存性と注入の関係は、何かを動かすために必要なものを外から提供してもらう仕組みだと言えます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<span lang=EN-US style='font-size:10.5pt;font-family:メイリオ'><br clear=all
style='page-break-before:always'>
</span>

<p class=MsoNormal align=left style='text-align:left'><span lang=EN-US
style='font-size:18.0pt;letter-spacing:1.0pt'>&nbsp;</span></p>

<h1><a name="_Toc183180299"><span lang=EN-US>9． </span><span lang=EN-US>Spring</span>アノテーション</a></h1>

<table class=MsoNormalTable border=1 cellpadding=0 style='border:solid windowtext 1.0pt'>
 <thead>
  <tr>
   <td width=171 style='width:128.1pt;border:solid windowtext 1.0pt;padding:
   .75pt .75pt .75pt .75pt'>
   <p class=MsoNormal>分類</p>
   </td>
   <td width=234 style='width:175.7pt;border:solid windowtext 1.0pt;padding:
   .75pt .75pt .75pt .75pt'>
   <p class=MsoNormal>アノテーション</p>
   </td>
   <td width=292 valign=top style='width:219.05pt;border:solid windowtext 1.0pt;
   padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=171 style='width:128.1pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>依存性注入<span lang=EN-US> (DI)</span></p>
  </td>
  <td width=234 style='width:175.7pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>@Autowired</span></p>
  <p class=MsoNormal><span lang=EN-US>@Bean</span></p>
  <p class=MsoNormal><span lang=EN-US>@Component</span></p>
  <p class=MsoNormal><span lang=EN-US>@Configuration</span></p>
  <p class=MsoNormal><span lang=EN-US>@Value</span></p>
  <p class=MsoNormal><span lang=EN-US>@Resource</span></p>
  <p class=MsoNormal><span lang=EN-US>@Inject</span></p>
  <p class=MsoNormal><span lang=EN-US>@EJB</span></p>
  <p class=MsoNormal><span lang=EN-US>@ManagedBean</span></p>
  <p class=MsoNormal><span lang=EN-US>@Named</span></p>
  </td>
  <td width=292 valign=top style='width:219.05pt;border:solid windowtext 1.0pt;
  padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>依存性の注入や<span lang=EN-US>Bean</span>の管理に使用するアノテーション。</p>
  </td>
 </tr>
 <tr>
  <td width=171 style='width:128.1pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>Web MVC</span></p>
  </td>
  <td width=234 style='width:175.7pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>@Controller</span></p>
  <p class=MsoNormal><span lang=EN-US>@RestController</span></p>
  <p class=MsoNormal><span lang=EN-US>@RequestMapping</span></p>
  <p class=MsoNormal><span lang=EN-US>@GetMapping</span></p>
  <p class=MsoNormal><span lang=EN-US>@PostMapping</span></p>
  <p class=MsoNormal><span lang=EN-US>@RequestParam</span></p>
  <p class=MsoNormal><span lang=EN-US>@ModelAttribute</span></p>
  <p class=MsoNormal><span lang=EN-US>@ResponseBody</span></p>
  <p class=MsoNormal><span lang=EN-US>@ControllerAdvice</span></p>
  </td>
  <td width=292 valign=top style='width:219.05pt;border:solid windowtext 1.0pt;
  padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>Web</span>アプリケーションのコントローラやリクエストマッピングに使用。</p>
  </td>
 </tr>
 <tr>
  <td width=171 style='width:128.1pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>データアクセス<span lang=EN-US> (JPA)</span></p>
  </td>
  <td width=234 style='width:175.7pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>@Entity</span></p>
  <p class=MsoNormal><span lang=EN-US>@Table</span></p>
  <p class=MsoNormal><span lang=EN-US>@Id</span></p>
  <p class=MsoNormal><span lang=EN-US>@Repository</span></p>
  <p class=MsoNormal><span lang=EN-US>@PersistenceContext</span></p>
  </td>
  <td width=292 valign=top style='width:219.05pt;border:solid windowtext 1.0pt;
  padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>データベースとやり取りするエンティティやリポジトリに関するアノテーション。</p>
  </td>
 </tr>
 <tr>
  <td width=171 style='width:128.1pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>トランザクション管理</p>
  </td>
  <td width=234 style='width:175.7pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>@Transactional</span></p>
  </td>
  <td width=292 valign=top style='width:219.05pt;border:solid windowtext 1.0pt;
  padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>トランザクションの管理やロールバックに関するアノテーション。</p>
  </td>
 </tr>
 <tr>
  <td width=171 style='width:128.1pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>アプリケーション設定・ブート</p>
  </td>
  <td width=234 style='width:175.7pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>@SpringBootApplication</span></p>
  <p class=MsoNormal><span lang=EN-US>@EnableScheduling</span></p>
  </td>
  <td width=292 valign=top style='width:219.05pt;border:solid windowtext 1.0pt;
  padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>Spring Boot</span>アプリケーションの設定や機能有効化に関するアノテーション。</p>
  </td>
 </tr>
 <tr>
  <td width=171 style='width:128.1pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>Lombok</span></p>
  </td>
  <td width=234 style='width:175.7pt;border:solid windowtext 1.0pt;padding:
  .75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span lang=EN-US>@Data</span></p>
  </td>
  <td width=292 valign=top style='width:219.05pt;border:solid windowtext 1.0pt;
  padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>コードの簡略化を目的とした<span lang=EN-US>Lombok</span>ライブラリのアノテーション。</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180300"><span lang=EN-US>9.1 </span>主要なアノテーション</a></h2>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>@Autowired</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>Spring</span>による依存性注入を行うアノテーション。</p>

<p class=MsoNormal>記述場所：フィールド、コンストラクタ、またはメソッド。</p>

<p class=MsoNormal>目的<span lang=EN-US>: Spring</span>が管理する任意の<span lang=EN-US>Bean</span>（オブジェクト）を注入するために使われます。</p>

<p class=MsoNormal>利用範囲<span lang=EN-US>: Spring</span>の<span lang=EN-US>DI</span>コンテナで管理されている全てのオブジェクトに適用できます。例えば、サービスクラスやリポジトリクラスなどに依存するオブジェクトを注入する際に使います。</p>

<p class=MsoNormal>例</p>

<p class=MsoNormal><span lang=EN-US>@Autowired</span></p>

<p class=MsoNormal><span lang=EN-US>private MyService myService;</span></p>

<p class=MsoNormal><span lang=EN-US>@Autowired</span>を使うことで、<span lang=EN-US>MyService</span>クラスのインスタンスが自動的に注入され、<span
lang=EN-US>myService</span>というフィールドに格納されます。</p>

<p class=MsoNormal>補足<span lang=EN-US>: @Autowired</span>は、デフォルトで<span
lang=EN-US>by type</span>（型に基づいて）自動的に適切な<span lang=EN-US>Bean</span>を見つけて注入します。必要に応じて<span
lang=EN-US>@Qualifier</span>を使い、特定の<span lang=EN-US>Bean</span>を選択することも可能です。</p>

<h4><span lang=EN-US>（2） </span><span lang=EN-US>@Bean</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>Spring</span>コンテナに管理される<span
lang=EN-US>Bean</span>を定義するアノテーション。</p>

<p class=MsoNormal>記述場所：メソッド。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（3） </span><span lang=EN-US>@Component</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>Spring</span>コンテナに管理される一般的な<span
lang=EN-US>Bean</span>を定義するアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（4） </span><span lang=EN-US>@Configuration</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>Spring</span>の設定クラスを示すアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（5） </span><span lang=EN-US>@Controller</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>Web</span>リクエストを処理するコントローラを定義するアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（6） </span><span lang=EN-US>@RestController</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>REST API</span>のエンドポイントを定義するコントローラ用のアノテーション
</p>

<p class=MsoNormal>（<span lang=EN-US>@Controller + @ResponseBody</span>）。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（7） </span><span lang=EN-US>@ResponseBody</span></h4>

<p class=MsoNormal>短い説明：メソッドの戻り値を<span lang=EN-US>HTTP</span>レスポンスのボディに直接変換するアノテーション。</p>

<p class=MsoNormal>記述場所：メソッド。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（8） </span><span lang=EN-US>@RequestMapping</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>URL</span>パスとリクエストハンドラをマッピングするアノテーション。</p>

<p class=MsoNormal>記述場所：クラスまたはメソッド。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（9） </span><span lang=EN-US>@GetMapping</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>HTTP GET</span>リクエストを処理するメソッドをマッピングするアノテーション。</p>

<p class=MsoNormal>記述場所：メソッド。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（10） </span><span lang=EN-US>@PostMapping</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>HTTP POST</span>リクエストを処理するメソッドをマッピングするアノテーション。</p>

<p class=MsoNormal>記述場所：メソッド。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（11） </span><span lang=EN-US>@RequestParam</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>HTTP</span>リクエストのパラメータをメソッドの引数にバインドするアノテーション。</p>

<p class=MsoNormal>記述場所：メソッド引数。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（12） </span><span lang=EN-US>@ModelAttribute</span></h4>

<p class=MsoNormal>短い説明：モデルデータをリクエストと共にバインドするアノテーション。</p>

<p class=MsoNormal>記述場所：メソッド、またはメソッド引数。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（13） </span><span lang=EN-US>@ControllerAdvice</span></h4>

<p class=MsoNormal>短い説明：全体的な例外処理やモデルデータの共通処理を提供するアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（14） </span><span lang=EN-US>@Repository</span></h4>

<p class=MsoNormal>短い説明：データアクセス層（<span lang=EN-US>DAO</span>）の<span lang=EN-US>Bean</span>を定義するアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（15） </span><span lang=EN-US>@Entity</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>JPA</span>エンティティクラスを示すアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（16） </span><span lang=EN-US>@Table</span></h4>

<p class=MsoNormal>短い説明：エンティティがマッピングされるデータベーステーブルを指定するアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（17） </span><span lang=EN-US>@Id</span></h4>

<p class=MsoNormal>短い説明：エンティティの主キーを指定するアノテーション。</p>

<p class=MsoNormal>記述場所：フィールドまたはメソッド。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（18） </span><span lang=EN-US>@Data</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>Lombok</span>による自動的なゲッター、セッター、<span
lang=EN-US>toString</span>等の生成アノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（19） </span><span lang=EN-US>@Service</span></h4>

<p class=MsoNormal>短い説明：ビジネスロジックを持つサービスクラスを定義するアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（20） </span><span lang=EN-US>@Transactional</span></h4>

<p class=MsoNormal>短い説明：メソッドやクラスに対してトランザクションの境界を定義するアノテーション。</p>

<p class=MsoNormal>記述場所：クラスまたはメソッド。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（21） </span><span lang=EN-US>@SpringBootApplication</span></h4>

<p class=MsoNormal>短い説明：<span lang=EN-US>Spring Boot</span>アプリケーションのエントリポイントを定義するアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（22） </span><span lang=EN-US>@EnableScheduling</span></h4>

<p class=MsoNormal>短い説明：スケジューリング機能を有効にするアノテーション。</p>

<p class=MsoNormal>記述場所：クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（23） </span><span lang=EN-US>@PersistenceContext</span></h4>

<p class=MsoNormal><span lang=EN-US>@Autowired</span>と<span lang=EN-US>@PersistenceContext</span>はどちらも依存性注入を行うためのアノテーションですが、注入する対象や役割が異なります。</p>

<p class=MsoNormal>目的<span lang=EN-US>: </span>特定の<span lang=EN-US>EntityManager</span>を注入するために使われます。<span
lang=EN-US>EntityManager</span>は、データベース操作を行う際に必要な<span lang=EN-US>JPA</span>（<span
lang=EN-US>Java Persistence API</span>）のインターフェースです。</p>

<p class=MsoNormal>利用範囲<span lang=EN-US>: </span>主にデータベースにアクセスするための<span
lang=EN-US>JPA</span>（<span lang=EN-US>Java Persistence API</span>）関連クラスで使用されます。<span
lang=EN-US>@PersistenceContext</span>を使うことで、<span lang=EN-US>Spring</span>が管理する<span
lang=EN-US>EntityManager</span>を注入し、データベースとのやり取りを実現します。</p>

<p class=MsoNormal>例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@PersistenceContext</span></p>

<p class=MsoNormal><span lang=EN-US>private EntityManager entityManager;</span></p>

<p class=MsoNormal><span lang=EN-US>@PersistenceContext</span>を使うと、<span
lang=EN-US>EntityManager</span>のインスタンスが自動的に注入され、<span lang=EN-US>entityManager</span>というフィールドで利用できるようになります。</p>

<p class=MsoNormal>補足<span lang=EN-US>: EntityManager</span>は、エンティティ（データベーステーブルの行に対応するオブジェクト）を操作するために使用されます。例えば、エンティティの保存、更新、削除、クエリ実行などを行うために重要です。</p>

<p class=MsoNormal>注入対象<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@PersistenceContext</span>は<span
lang=EN-US>EntityManager</span>の注入に特化しています。</p>

<p class=MsoNormal>用途<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@PersistenceContext</span>は、<span
lang=EN-US>JPA</span>を使ったデータベース操作でのみ使います。</p>

<p class=MsoNormal>補足<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@PersistenceContext</span>の代わりに<span
lang=EN-US>@Autowired</span>を使うと、次のような問題が発生する可能性があります。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>トランザクションの管理</h6>

<p class=MsoNormal><span lang=EN-US>@PersistenceContext</span>は、<span
lang=EN-US>JPA</span>の<span lang=EN-US>EntityManager</span>を注入する際、トランザクションスコープで管理されるため、トランザクション開始や終了のタイミングに応じて自動的に正しい<span
lang=EN-US>EntityManager</span>が提供されます。これにより、エンティティの状態が一貫性を保ち、トランザクションの境界内で適切に動作します。</p>

<p class=MsoNormal>一方、<span lang=EN-US>@Autowired</span>は<span lang=EN-US>Spring</span>の通常の<span
lang=EN-US>Bean</span>を注入するためのものです。もし<span lang=EN-US>@Autowired</span>で<span
lang=EN-US>EntityManager</span>を注入しようとすると、<span lang=EN-US>Spring</span>がトランザクションの境界を適切に管理できず、複数のトランザクション間で問題が発生する可能性があります。例えば、トランザクション内で<span
lang=EN-US>EntityManager</span>が正しく解放されない、または使い回されるといった不具合が起きます。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>スレッドセーフ性</h6>

<p class=MsoNormal><span lang=EN-US>@PersistenceContext</span>を使うと、トランザクションスコープで<span
lang=EN-US>EntityManager</span>が注入されるため、マルチスレッド環境でもスレッドごとに適切に分離された<span
lang=EN-US>EntityManager</span>が使用されます。</p>

<p class=MsoNormal><span lang=EN-US>@Autowired</span>を使った場合、<span lang=EN-US>EntityManager</span>がシングルトンとして扱われる可能性があり、スレッド間で共有されるとスレッドセーフでなくなることがあります。これにより、同時実行中の複数のトランザクションで不整合が発生する可能性があります。</p>

<p class=MsoNormal>そのため、<span lang=EN-US>EntityManager</span>の注入には<span
lang=EN-US>@PersistenceContext</span>を使うべきで、<span lang=EN-US>@Autowired</span>ではトランザクション管理やスレッドセーフ性の問題が起きる可能性があります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（24） </span><span lang=EN-US>@Resource</span></h4>

<p class=MsoNormal>目的<span lang=EN-US>: Java</span>の依存性注入を行うための標準アノテーションで、主に名前による依存性注入に使われます。</p>

<p class=MsoNormal>特徴<span lang=EN-US>: Spring</span>の<span lang=EN-US>@Autowired</span>が型に基づいて注入するのに対し、<span
lang=EN-US>@Resource</span>は名前に基づいて依存性を解決します。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Resource(name=&quot;myBean&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>private MyBean myBean;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（25） </span><span lang=EN-US>@Inject</span></h4>

<p class=MsoNormal>目的<span lang=EN-US>: Java</span>の標準依存性注入アノテーション（<span
lang=EN-US>JSR-330</span>）。<span lang=EN-US>Spring</span>の<span lang=EN-US>@Autowired</span>に非常に似ていますが、標準の<span
lang=EN-US>DI</span>アノテーションです。</p>

<p class=MsoNormal>特徴<span lang=EN-US>: @Autowired</span>とほぼ同じ動作をしますが、<span
lang=EN-US>Spring</span>に特化していないため、他の<span lang=EN-US>DI</span>フレームワークでも使えることが特徴です。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Inject</span></p>

<p class=MsoNormal><span lang=EN-US>private MyService myService;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（26） </span><span lang=EN-US>@EJB</span></h4>

<p class=MsoNormal>目的<span lang=EN-US>: Java EE</span>（<span lang=EN-US>Jakarta
EE</span>）の環境で使われるアノテーションで、<span lang=EN-US>**Enterprise Java Beans</span>（<span
lang=EN-US>EJB</span>）<span lang=EN-US>**</span>を注入するために使用します。</p>

<p class=MsoNormal>特徴<span lang=EN-US>: EJB</span>を使用する際、<span lang=EN-US>@Autowired</span>ではなく<span
lang=EN-US>@EJB</span>を使って<span lang=EN-US>EJB</span>コンポーネントを注入します。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@EJB</span></p>

<p class=MsoNormal><span lang=EN-US>private MyEJBService ejbService;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（27） </span><span lang=EN-US>@Value</span></h4>

<p class=MsoNormal>目的<span lang=EN-US>: </span>プロパティファイルなどから値を注入する際に使用します。</p>

<p class=MsoNormal>特徴<span lang=EN-US>: </span>値を直接コード内に埋め込むのではなく、設定ファイルから動的に読み込む際に使います。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Value(&quot;${app.name}&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>private String appName;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（28） </span><span lang=EN-US>@ Transactional</span></h4>

<p class=MsoNormal>目的<span lang=EN-US>: </span>メソッドやクラスに対してトランザクション境界を定義するためのアノテーションです。</p>

<p class=MsoNormal>特徴<span lang=EN-US>: </span>トランザクション管理を明示的に行う必要がある場合、<span
lang=EN-US>@Transactional</span>を使用してトランザクションの開始・終了を自動的に管理します。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Transactional</span></p>

<p class=MsoNormal><span lang=EN-US>public void saveData() {</span></p>

<p class=MsoNormal><span lang=EN-US>    // </span>データ保存処理</p>

<div style='border:none;border-bottom:double windowtext 2.25pt;padding:0mm 0mm 1.0pt 0mm'>

<p class=MsoNormal style='border:none;padding:0mm'><span lang=EN-US>}</span></p>

<p class=MsoNormal style='border:none;padding:0mm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='border:none;padding:0mm'><span lang=EN-US>&nbsp;</span></p>

</div>

<p class=MsoNormal><span lang=EN-US>­­­­­­­­­­­­­­­­­­­­­­­­­­­­</span></p>

<p class=MsoNormal>（？？？何関係）？？？？？）</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（29） </span><span lang=EN-US>@Component</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: Spring</span>コンテナに管理される汎用的な<span
lang=EN-US>Bean</span>を定義します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>任意のクラス。具体的な役割がない場合に使用。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（30） </span><span lang=EN-US>@Controller</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>プレゼンテーション層のコントローラとして使用されるクラスを指定します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>コントローラクラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（31） </span><span lang=EN-US>@Service</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>ビジネスロジックを提供するサービス層のクラスを指定します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>サービスクラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（32） </span><span lang=EN-US>@Repository</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>データアクセス層（<span lang=EN-US>DAO</span>）のクラスを指定します。データ操作時の例外を変換する機能も提供します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>リポジトリクラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（33） </span><span lang=EN-US>@RestController</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: RESTful</span>な<span lang=EN-US>Web</span>サービスを提供するコントローラを指定します（<span
lang=EN-US>@Controller</span>と<span lang=EN-US>@ResponseBody</span>を組み合わせたもの）。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: REST API</span>のエンドポイントを提供するクラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（34） </span><span lang=EN-US>@ControllerAdvice</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>アプリ全体で共有する例外処理やデータバインディングの設定を行うクラスを指定します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>グローバルな例外処理やアドバイスロジックを持つクラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（35） </span><span lang=EN-US>@ManagedBean</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: JSF</span>（<span lang=EN-US>JavaServer
Faces</span>）のマネージド<span lang=EN-US>Bean</span>を定義します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: JSF</span>アプリケーションで使用される<span
lang=EN-US>Bean</span>クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（36） </span><span lang=EN-US>@Named</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: CDI</span>（<span lang=EN-US>Context and
Dependency Injection</span>）で名前付き<span lang=EN-US>Bean</span>を定義します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: CDI</span>コンテナで管理される<span lang=EN-US>Bean</span>クラス。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180301"><span lang=EN-US>9.2 </span>バリデーション関係</a></h2>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>@Validated</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>バリデーションを有効化します。メソッドレベルやクラスに付与して、引数やフィールドの検証を実施。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>サービスクラス、コントローラのメソッド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Service</span></p>

<p class=MsoNormal><span lang=EN-US>public class BankService {</span></p>

<p class=MsoNormal><span lang=EN-US>    public void createAccount(@Validated
Account account) { ... }</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（2） </span><span lang=EN-US>@AssertTrue</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>フィールド値が<span lang=EN-US>true</span>であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@AssertTrue</span></p>

<p class=MsoNormal><span lang=EN-US>private boolean isActive;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（3） </span><span lang=EN-US>@AssertFalse</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>フィールド値が<span lang=EN-US>false</span>であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@AssertFalse</span></p>

<p class=MsoNormal><span lang=EN-US>private boolean isSuspended;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（4） </span><span lang=EN-US>@Null</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>フィールド値が<span lang=EN-US>null</span>であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Null</span></p>

<p class=MsoNormal><span lang=EN-US>private String notSetYet;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（5） </span><span lang=EN-US>@NotNull</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>フィールド値が<span lang=EN-US>null</span>でないことを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@NotNull</span></p>

<p class=MsoNormal><span lang=EN-US>private String name;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（6） </span><span lang=EN-US>@NotBlank</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>空文字や空白だけでない文字列を検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@NotBlank</span></p>

<p class=MsoNormal><span lang=EN-US>private String username;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（7） </span><span lang=EN-US>@Max(value)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>数値が指定値以下であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Max(100)</span></p>

<p class=MsoNormal><span lang=EN-US>private int age;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（8） </span><span lang=EN-US>@Min(value)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>数値が指定値以上であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Min(18)</span></p>

<p class=MsoNormal><span lang=EN-US>private int age;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（9） </span><span lang=EN-US>@DecimalMax(value, inclusive)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>小数点含む数値が指定値以下であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@DecimalMax(value = &quot;100.00&quot;,
inclusive = false)</span></p>

<p class=MsoNormal><span lang=EN-US>private BigDecimal discount;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（10） </span><span lang=EN-US>@DecimalMin(value, inclusive)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>小数点含む数値が指定値以上であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@DecimalMin(value = &quot;0.01&quot;,
inclusive = true)</span></p>

<p class=MsoNormal><span lang=EN-US>private BigDecimal price;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（11） </span><span lang=EN-US>@Positive</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>正の数値であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Positive</span></p>

<p class=MsoNormal><span lang=EN-US>private int quantity;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（12） </span><span lang=EN-US>@PositiveOrZero</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: 0</span>または正の数値であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@PositiveOrZero</span></p>

<p class=MsoNormal><span lang=EN-US>private int stock;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（13） </span><span lang=EN-US>@Negative</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>負の数値であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Negative</span></p>

<p class=MsoNormal><span lang=EN-US>private int balance;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（14） </span><span lang=EN-US>@NegativeOrZero</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: 0</span>または負の数値であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@NegativeOrZero</span></p>

<p class=MsoNormal><span lang=EN-US>private int overdraft;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（15） </span><span lang=EN-US>@Digits(integer, fraction)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>整数部と小数部の桁数を検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Digits(integer = 6, fraction = 2)</span></p>

<p class=MsoNormal><span lang=EN-US>private BigDecimal amount;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（16） </span><span lang=EN-US>@DateTimeFormat(pattern)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>日時のフォーマットを指定します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@DateTimeFormat(pattern =
&quot;yyyy-MM-dd&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>private LocalDate date;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（17） </span><span lang=EN-US>@Size(max, min)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>配列やコレクション、文字列のサイズ（長さ）が指定範囲内であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Size(min = 5, max = 20)</span></p>

<p class=MsoNormal><span lang=EN-US>private String password;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（18） </span><span lang=EN-US>@Email</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>メールアドレス形式であることを検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Email</span></p>

<p class=MsoNormal><span lang=EN-US>private String emailAddress;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（19） </span><span lang=EN-US>@Pattern(regex, flags)</span></h4>

<p class=MsoNormal>説明<span lang=EN-US>: </span>指定した正規表現に一致するか検証します。</p>

<p class=MsoNormal>付与場所<span lang=EN-US>: </span>エンティティのフィールド。</p>

<p class=MsoNormal>使用例<span lang=EN-US>:</span></p>

<p class=MsoNormal><span lang=EN-US>@Pattern(regexp = &quot;^[a-zA-Z0-9]+$&quot;,
flags = Pattern.Flag.UNICODE_CASE)</span></p>

<p class=MsoNormal><span lang=EN-US>private String username;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180302"><span lang=EN-US>9.3 </span><span lang=EN-US>JPA</span>関係</a></h2>

<p class=MsoNormal><span lang=EN-US>Spring Boot</span>（<span lang=EN-US>JPA</span>）でエンティティに関連を設定する際に使用する代表的なアノテーションについて、全体像とオプション、短い解説を以下にまとめます。これらのアノテーションは、データベース間のリレーション（関係）を表現するために用いられます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>@OneToOne</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: 1</span>対<span lang=EN-US>1</span>のリレーションを表現します。たとえば、「<span
lang=EN-US>1</span>つのユーザーが<span lang=EN-US>1</span>つのプロファイルを持つ」場合などに使用します。</p>

<p class=MsoNormal>代表的なオプション<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>mappedBy: </span>双方向関連時に使用。関連先のエンティティのフィールド名を指定。</p>

<p class=MsoNormal>・<span lang=EN-US>cascade: </span>カスケード操作（例<span lang=EN-US>:
CascadeType.ALL</span>）。</p>

<p class=MsoNormal>・<span lang=EN-US>fetch: </span>フェッチタイプ（例<span lang=EN-US>:
FetchType.LAZY</span>）。</p>

<p class=MsoNormal><span lang=EN-US>@OneToOne(cascade = CascadeType.ALL, fetch
= FetchType.LAZY)</span></p>

<p class=MsoNormal><span lang=EN-US>@JoinColumn(name = &quot;profile_id&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>private Profile profile;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（2） </span><span lang=EN-US>@OneToMany</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: 1</span>対多のリレーションを表現します。たとえば、「<span
lang=EN-US>1</span>つの注文が複数の商品を含む」場合などに使用します。</p>

<p class=MsoNormal>代表的なオプション<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>mappedBy: </span>双方向関連時に使用。関連先のエンティティのフィールド名を指定。</p>

<p class=MsoNormal>・<span lang=EN-US>cascade: </span>カスケード操作。</p>

<p class=MsoNormal>・<span lang=EN-US>fetch: </span>フェッチタイプ。</p>

<p class=MsoNormal>・<span lang=EN-US>orphanRemoval: </span>親エンティティから削除された子エンティティを自動削除。</p>

<p class=MsoNormal><span lang=EN-US>@OneToMany(mappedBy = &quot;order&quot;,
cascade = CascadeType.ALL, orphanRemoval = true)</span></p>

<p class=MsoNormal><span lang=EN-US>private List&lt;Item&gt; items;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（3） </span><span lang=EN-US>@ManyToOne</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: </span>多対<span lang=EN-US>1</span>のリレーションを表現します。たとえば、「複数の商品が<span
lang=EN-US>1</span>つの注文に属する」場合などに使用します。</p>

<p class=MsoNormal>代表的なオプション<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>fetch: </span>フェッチタイプ。</p>

<p class=MsoNormal>・<span lang=EN-US>optional: false</span>の場合、関連先が必須となる。</p>

<p class=MsoNormal><span lang=EN-US>@ManyToOne(fetch = FetchType.EAGER,
optional = false)</span></p>

<p class=MsoNormal><span lang=EN-US>@JoinColumn(name = &quot;order_id&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>private Order order;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（4） </span><span lang=EN-US>@ManyToMany</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: </span>多対多のリレーションを表現します。たとえば、「複数の学生が複数のコースを受講する」場合などに使用します。</p>

<p class=MsoNormal>代表的なオプション<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>mappedBy: </span>双方向関連時に使用。</p>

<p class=MsoNormal>・<span lang=EN-US>cascade: </span>カスケード操作。</p>

<p class=MsoNormal>・<span lang=EN-US>fetch: </span>フェッチタイプ。</p>

<p class=MsoNormal>・中間テーブルを明示する場合<span lang=EN-US>: @JoinTable</span>。</p>

<p class=MsoNormal><span lang=EN-US>@ManyToMany(cascade = CascadeType.ALL)</span></p>

<p class=MsoNormal><span lang=EN-US>@JoinTable(</span></p>

<p class=MsoNormal><span lang=EN-US>    name = &quot;student_course&quot;,</span></p>

<p class=MsoNormal><span lang=EN-US>    joinColumns = @JoinColumn(name =
&quot;student_id&quot;),</span></p>

<p class=MsoNormal><span lang=EN-US>    inverseJoinColumns = @JoinColumn(name =
&quot;course_id&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>private Set&lt;Course&gt; courses;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>オプションの解説</p>

<p class=MsoNormal><span lang=EN-US>cascade: </span>親エンティティの操作（保存、削除など）を子エンティティに伝播させる。例<span
lang=EN-US>: CascadeType.PERSIST, CascadeType.REMOVE, CascadeType.ALL</span>。</p>

<p class=MsoNormal><span lang=EN-US>fetch: </span>リレーションのフェッチ戦略を指定。</p>

<p class=MsoNormal>・<span lang=EN-US>FetchType.LAZY: </span>遅延ロード（必要になったときにデータを取得）。</p>

<p class=MsoNormal>・<span lang=EN-US>FetchType.EAGER: </span>即時ロード（関連データをすぐ取得）。</p>

<p class=MsoNormal><span lang=EN-US>mappedBy: </span>双方向関連の場合に、どちらが所有者かを指定。</p>

<p class=MsoNormal><span lang=EN-US>@JoinColumn: </span>外部キー列を指定。</p>

<p class=MsoNormal>初心者向けポイント</p>

<p class=MsoNormal>関連を単方向に設計することで、シンプルに管理できます。</p>

<p class=MsoNormal>双方向関連を使う場合、必ず<span lang=EN-US> mappedBy </span>を適切に設定してください。</p>

<p class=MsoNormal><span lang=EN-US>fetch </span>のデフォルト値に注意（<span lang=EN-US>@OneToMany
</span>は<span lang=EN-US> LAZY</span>、<span lang=EN-US>@ManyToOne </span>は<span
lang=EN-US> EAGER</span>）。</p>

<p class=MsoNormal>さらに詳しく知りたい場合や具体的な設計に迷った際は、いつでもご質問ください！</p>

<p class=MsoNormal><span lang=EN-US>JPA </span>では、関連アノテーション以外にも、エンティティのフィールドに付与する重要なアノテーションがあります。以下に、代表的なものと簡単な解説をまとめます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（5） </span><span lang=EN-US>@Enumerated</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: enum </span>型をエンティティのフィールドとして使用する場合に付与します。</p>

<p class=MsoNormal>属性<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>EnumType.STRING</span>（推奨）<span
lang=EN-US>: enum </span>の名前（例<span lang=EN-US>: &quot;ACTIVE&quot;,
&quot;INACTIVE&quot;</span>）をデータベースに保存。</p>

<p class=MsoNormal>・<span lang=EN-US>EnumType.ORDINAL: enum </span>の順序番号（例<span
lang=EN-US>: 0, 1</span>）を保存。ただし順序が変更されると問題が起きるため、非推奨。</p>

<p class=MsoNormal><span lang=EN-US>public enum Status {</span></p>

<p class=MsoNormal><span lang=EN-US>    ACTIVE, INACTIVE</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>@Enumerated(EnumType.STRING)</span></p>

<p class=MsoNormal><span lang=EN-US>private Status status;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（6） </span><span lang=EN-US>@Transient</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: </span>データベースにマッピングしないフィールドに付与します。</p>

<p class=MsoNormal>たとえば、計算結果や一時的なデータを保持する場合に使用。</p>

<p class=MsoNormal><span lang=EN-US>@Transient</span></p>

<p class=MsoNormal><span lang=EN-US>private String temporaryValue;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（7） </span><span lang=EN-US>@Lob</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: </span>大量のデータ（長い文字列やバイナリデータ）を保存するためのフィールドに付与します。</p>

<p class=MsoNormal>適用可能な型<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>String: </span>テキストデータ（<span lang=EN-US>CLOB:
Character Large Object</span>）。</p>

<p class=MsoNormal>・<span lang=EN-US>byte[] </span>または<span lang=EN-US> Byte[]:
</span>バイナリデータ（<span lang=EN-US>BLOB: Binary Large Object</span>）。</p>

<p class=MsoNormal><span lang=EN-US>@Lob</span></p>

<p class=MsoNormal><span lang=EN-US>private String largeText;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（8） </span><span lang=EN-US>@Column</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: </span>テーブルのカラムのプロパティを設定します。</p>

<p class=MsoNormal>主な属性<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>name: </span>カラム名を指定。</p>

<p class=MsoNormal>・<span lang=EN-US>nullable: true</span>（デフォルト）でカラムの<span
lang=EN-US> NULL </span>許可。</p>

<p class=MsoNormal>・<span lang=EN-US>length: </span>文字列の最大長を指定（デフォルト<span
lang=EN-US>: 255</span>）。</p>

<p class=MsoNormal>・<span lang=EN-US>unique: true </span>でユニーク制約を設定。</p>

<p class=MsoNormal><span lang=EN-US>@Column(name = &quot;user_name&quot;,
nullable = false, length = 100)</span></p>

<p class=MsoNormal><span lang=EN-US>private String userName;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（9） </span><span lang=EN-US>@GeneratedValue</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: </span>主キーの生成方法を指定します。通常、<span
lang=EN-US>@Id </span>と併用。</p>

<p class=MsoNormal>主な属性<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>strategy: </span>主キーの生成戦略を指定。</p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'></span><span
lang=EN-US>         GenerationType.IDENTITY: </span>自動インクリメント。</p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'></span><span
lang=EN-US>         GenerationType.SEQUENCE: </span>シーケンスを使用。</p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Century","serif"'></span><span
lang=EN-US>         GenerationType.TABLE: </span>テーブルを使用（あまり一般的ではない）。</p>

<p class=MsoNormal><span lang=EN-US>@Id</span></p>

<p class=MsoNormal><span lang=EN-US>@GeneratedValue(strategy =
GenerationType.IDENTITY)</span></p>

<p class=MsoNormal><span lang=EN-US>private Long id;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（10） </span><span lang=EN-US>@Basic</span></h4>

<p class=MsoNormal>概要<span lang=EN-US>: </span>デフォルトで付与されているような動作を明示的に指定するアノテーション。</p>

<p class=MsoNormal>主な属性<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>fetch: </span>フェッチタイプを指定。</p>

<p class=MsoNormal>・<span lang=EN-US>optional: true</span>（デフォルト）で値が<span
lang=EN-US> null </span>を許可。</p>

<p class=MsoNormal><span lang=EN-US>@Basic(optional = false)</span></p>

<p class=MsoNormal><span lang=EN-US>private String email;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4><span lang=EN-US>（11） </span><span lang=EN-US>@Temporal</span>（<span
lang=EN-US>JDK 1.8</span>以前推奨）</h4>

<p class=MsoNormal>概要<span lang=EN-US>: Date </span>または<span lang=EN-US>
Calendar </span>型のフィールドに付与し、日付の保存形式を指定します。</p>

<p class=MsoNormal>属性<span lang=EN-US>:</span></p>

<p class=MsoNormal>・<span lang=EN-US>TemporalType.DATE: </span>日付のみ。</p>

<p class=MsoNormal>・<span lang=EN-US>TemporalType.TIME: </span>時刻のみ。</p>

<p class=MsoNormal>・<span lang=EN-US>TemporalType.TIMESTAMP: </span>日付と時刻。</p>

<p class=MsoNormal><span lang=EN-US>@Temporal(TemporalType.TIMESTAMP)</span></p>

<p class=MsoNormal><span lang=EN-US>private Date createdDate;</span></p>

<p class=MsoNormal>注意<span lang=EN-US>: Java 8</span>以降は<span lang=EN-US>LocalDate</span>や<span
lang=EN-US>LocalDateTime</span>を推奨。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>初学者向けの把握ポイント</p>

<p class=MsoNormal>・<span lang=EN-US>@Enumerated: enum </span>型を使用する際に必須。</p>

<p class=MsoNormal>・<span lang=EN-US>@Transient: </span>データベースに保存しないフィールドに必須。</p>

<p class=MsoNormal>・<span lang=EN-US>@Column </span>と<span lang=EN-US>
@GeneratedValue: </span>基本的なフィールド設定。</p>

<p class=MsoNormal>・<span lang=EN-US>@Lob: </span>大容量データを保存する場合。</p>

<p class=MsoNormal>・<span lang=EN-US>@Temporal</span>（古いコード用）または<span
lang=EN-US>Java 8</span>以降の<span lang=EN-US>LocalDateTime</span>を活用。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180303"><span lang=EN-US>10． </span>コントローラとビューの間のデータの受け渡し</a></h1>

<h2><a name="_Toc183180304"><span lang=EN-US>10.1 </span><span lang=EN-US>View </span>→<span
lang=EN-US> Controller</span></a></h2>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>@RequestParam</span></h6>

<p class=MsoNormal>このアノテーションは、リクエストパラメータを引数として受け取る際に使用します。</p>

<p class=MsoNormal>主にフォームの入力や<span lang=EN-US>URL</span>クエリパラメータを取得するのに使われます。</p>

<p class=MsoNormal>例えば、<span lang=EN-US>/greet?name=John </span>のようなリクエストで「<span
lang=EN-US>name</span>」というパラメータを受け取る場合、<span lang=EN-US>@RequestParam </span>を使います。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>@GetMapping(&quot;/greet&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>public String
greet(@RequestParam(&quot;name&quot;) String name, Model model) {</span></p>

<p class=MsoNormal><span lang=EN-US>    model.addAttribute(&quot;name&quot;,
name);</span></p>

<p class=MsoNormal><span lang=EN-US>    return &quot;greet&quot;;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>@ModelAttribute</span></h6>

<p class=MsoNormal>このアノテーションは、フォームデータやリクエストボディのデータをオブジェクトにバインドするために使用します。主にフォームのデータを複数のフィールドにまとめて受け取る場合に使われます。例えば、ユーザーオブジェクト全体をフォームから取得する場合に便利です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>@PostMapping(&quot;/register&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>public String register(@ModelAttribute User
user, Model model) {</span></p>

<p class=MsoNormal><span lang=EN-US>    model.addAttribute(&quot;user&quot;,
user);</span></p>

<p class=MsoNormal><span lang=EN-US>    return &quot;register&quot;;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>@RequestParam</span>は個別のパラメータを、<span
lang=EN-US>@ModelAttribute</span>はオブジェクト全体を受け取るといった役割で使用されます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>他の方法</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>@RequestBody</span></h6>

<p class=MsoNormal>このアノテーションは、リクエストボディ全体を直接<span lang=EN-US>Java</span>オブジェクトに変換して受け取るのに使用します。</p>

<p class=MsoNormal>特に、<span lang=EN-US>JSON</span>形式のデータを受け取る際に役立ちます。<span
lang=EN-US>REST API</span>でよく使います。</p>

<p class=MsoNormal><span lang=EN-US>@PostMapping(&quot;/api/data&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>public ResponseEntity&lt;String&gt;
postData(@RequestBody Data data) {</span></p>

<p class=MsoNormal><span lang=EN-US>    // JSON</span>をオブジェクトにバインド</p>

<p class=MsoNormal><span lang=EN-US>    return
ResponseEntity.ok(&quot;Success&quot;);</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>PathVariable</span></h6>

<p class=MsoNormal>パスの一部を引数として受け取る際に使います。</p>

<p class=MsoNormal><span lang=EN-US>@GetMapping(&quot;/user/{id}&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>public String
getUser(@PathVariable(&quot;id&quot;) Long id, Model model) {</span></p>

<p class=MsoNormal><span lang=EN-US>    model.addAttribute(&quot;userId&quot;,
id);</span></p>

<p class=MsoNormal><span lang=EN-US>    return &quot;user&quot;;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180305"><span lang=EN-US>10.1.1 </span>補足説明</a></h3>

<p class=MsoNormal><span lang=EN-US>Spring Boot</span>では、フォームクラスに対応しない入力フィールドの値を受け取るためにさまざまな方法を提供しています。</p>

<p class=MsoNormal>たとえば、<span lang=EN-US>@RequestParam</span>アノテーションを使用して直接リクエストパラメータを取得できます。</p>

<p class=MsoNormal>また、<span lang=EN-US>@ModelAttribute</span>アノテーションを使用してフォームクラス以外のオブジェクトにデータをバインドできます。</p>

<p class=MsoNormal>要するに、<span lang=EN-US>Spring Boot</span>ではフォームクラスを使用してフォームデータを受け取ることが一般的ですが、他の方法を使ってフォームクラスに定義されていない入力フィールドの値を受け取ることも可能です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180306"><span lang=EN-US>10.2 </span><span lang=EN-US>Controller
</span>→ <span lang=EN-US>View</span></a></h2>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Model</span></h6>

<p class=MsoNormal><span lang=EN-US>Controller</span>から<span lang=EN-US>View</span>にデータを渡す際に、<span
lang=EN-US>Model</span>を使ってデータを追加します。</p>

<p class=MsoNormal>これは最も一般的な方法です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>@GetMapping(&quot;/show&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>public String show(Model model) {</span></p>

<p class=MsoNormal><span lang=EN-US>    model.addAttribute(&quot;message&quot;,
&quot;Hello World&quot;);</span></p>

<p class=MsoNormal><span lang=EN-US>    return &quot;show&quot;;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>ModelAndView</span></h6>

<p class=MsoNormal><span lang=EN-US>ModelAndView</span>は、モデルとビューを同時に返すことができるクラスです。</p>

<p class=MsoNormal>ビュー名とモデルを一緒に扱う場合に便利です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>@GetMapping(&quot;/show&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>public ModelAndView show() {</span></p>

<p class=MsoNormal><span lang=EN-US>    ModelAndView mav = new
ModelAndView(&quot;show&quot;);</span></p>

<p class=MsoNormal><span lang=EN-US>    mav.addObject(&quot;message&quot;,
&quot;Hello World&quot;);</span></p>

<p class=MsoNormal><span lang=EN-US>    return mav;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>RedirectAttributes</span></h6>

<p class=MsoNormal>リダイレクト時に一時的にデータを渡すために使用します。</p>

<p class=MsoNormal><span lang=EN-US>RedirectAttributes</span>は一度だけ使用される一時的なデータを渡すために便利です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>@PostMapping(&quot;/submit&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>public String submit(RedirectAttributes
redirectAttributes) {</span></p>

<p class=MsoNormal><span lang=EN-US>   
redirectAttributes.addFlashAttribute(&quot;message&quot;, &quot;Data submitted
successfully&quot;);</span></p>

<p class=MsoNormal><span lang=EN-US>    return &quot;redirect:/result&quot;;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal>これらの方法を組み合わせて、用途に応じたデータの受け渡しが可能です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180307"><span lang=EN-US>11． </span><span lang=EN-US>Spring</span>アスペクト指向プログラミング</a></h1>

<p class=MsoNormal><span lang=EN-US>Spring AOP (Aspect-Oriented Programming) </span>は、横断的な関心事（<span
lang=EN-US>cross-cutting concerns</span>）をモジュール化するためのプログラミング手法です。横断的な関心事とは、アプリケーション全体にまたがる共通の機能のことを指し、ログ出力やトランザクション管理、セキュリティなどが典型例です。</p>

<p class=MsoNormal><span lang=EN-US>AOP </span>の基本的な考え方は、これらの横断的な機能をアプリケーションの本来のビジネスロジックとは分離し、個別に管理できるようにすることです。これにより、コードの重複を減らし、保守性や可読性を向上させます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180308"><span lang=EN-US>11.1 </span>構成要素</a></h2>

<p class=MsoNormal><span lang=EN-US>Spring AOP </span>では、以下の<span lang=EN-US>5</span>つの要素が基本的な構成要素です：</p>

<h3><a name="_Toc183180309"><span lang=EN-US>11.1.1 </span>アスペクト（<span
lang=EN-US>Aspect</span>）</a></h3>

<p class=MsoNormal>横断的な機能そのものです。たとえば、ログ出力や例外処理をひとつのアスペクトとして実装します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180310"><span lang=EN-US>11.1.2 </span>アドバイス（<span
lang=EN-US>Advice</span>）</a></h3>

<p class=MsoNormal>アスペクトがいつ実行されるかを定義します。メソッドの実行前、実行後、例外発生時など、どのタイミングで横断的な処理を行うかを指定します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180311"><span lang=EN-US>11.1.3 </span>ジョインポイント（<span
lang=EN-US>Join Point</span>）</a></h3>

<p class=MsoNormal>アスペクトが適用される具体的なポイントです。<span lang=EN-US>Spring </span>では、主にメソッド呼び出しがジョインポイントとなります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180312"><span lang=EN-US>11.1.4 </span>ポイントカット（<span
lang=EN-US>Pointcut</span>）</a></h3>

<p class=MsoNormal>ジョインポイントをフィルタリングし、どのメソッドにアドバイスを適用するかを定義します。正規表現やアノテーションを使って、対象となるメソッドを柔軟に指定できます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180313"><span lang=EN-US>11.1.5 </span>ターゲット（<span
lang=EN-US>Target</span>）</a></h3>

<p class=MsoNormal>アスペクトを適用されるオブジェクト、つまりビジネスロジックを持つクラスです。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180314"><span lang=EN-US>11.2 </span>簡単な例</a></h2>

<p class=MsoNormal>たとえば、特定のメソッドが実行される前にログを出力するアスペクトを作成する場合、以下の流れとなります：</p>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>@Before </span>アノテーションを使って、メソッドの実行前にログ出力を行うアドバイスを定義。</h4>

<h4><span lang=EN-US>（2） </span>ポイントカットで、どのメソッドに対してこのアドバイスを適用するかを指定。</h4>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>@Aspect</span></p>

<p class=MsoNormal><span lang=EN-US>@Component</span></p>

<p class=MsoNormal><span lang=EN-US>public class LoggingAspect {</span></p>

<p class=MsoNormal><span lang=EN-US>    @Before(&quot;execution(*
com.example.service.*.*(..))&quot;)</span></p>

<p class=MsoNormal><span lang=EN-US>    public void logBefore(JoinPoint
joinPoint) {</span></p>

<p class=MsoNormal><span lang=EN-US>        System.out.println(&quot;Executing
method: &quot; + joinPoint.getSignature());</span></p>

<p class=MsoNormal><span lang=EN-US>    }</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>このコードでは、<span lang=EN-US>com.example.service </span>パッケージ内のすべてのメソッドが実行される前に、メソッド名をログに出力します。</p>

<p class=MsoNormal><span lang=EN-US>Spring AOP </span>を使用すると、ビジネスロジックに直接関与しないコードを分離し、関心ごとに応じた処理を柔軟に追加できるようになります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<span lang=EN-US style='font-size:10.5pt;font-family:メイリオ'><br clear=all
style='page-break-before:always'>
</span>

<p class=MsoNormal align=left style='text-align:left'><span lang=EN-US
style='font-size:18.0pt;letter-spacing:1.0pt'>&nbsp;</span></p>

<h1><a name="_Toc183180315"><span lang=EN-US>12． </span><span lang=EN-US>Spring
JPA </span>永続化</a></h1>

<h2><a name="_Toc183180316"><span lang=EN-US>12.1 </span>エンティティオブジェクトの状態遷移</a></h2>

<p class=MsoNormal><span lang=EN-US><img border=0 width=589 height=392 id="図 63"
src="SpringWebAppDoc.files/image061.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180317"><span lang=EN-US>12.2 </span>エンティティオブジェクトの状態</a></h2>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=161 valign=top style='width:120.5pt;border:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>状態名</p>
  </td>
  <td width=543 valign=top style='width:407.35pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>概要</p>
  </td>
 </tr>
 <tr>
  <td width=161 valign=top style='width:120.5pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>NEW</span>状態</p>
  </td>
  <td width=543 valign=top style='width:407.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>エンティティオブジェクトを生成（<span lang=EN-US>new</span>）しただけでの状態です。永続化コンテキストとは関連付けられていません。</p>
  </td>
 </tr>
 <tr>
  <td width=161 valign=top style='width:120.5pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>MANAGED</span>状態</p>
  </td>
  <td width=543 valign=top style='width:407.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>エンティティオブジェクトは永続化コンテキストと関連付けられた状態です。<span lang=EN-US>EntityManager#find</span>で検索可能です。</p>
  </td>
 </tr>
 <tr>
  <td width=161 valign=top style='width:120.5pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>DETACHED</span>状態</p>
  </td>
  <td width=543 valign=top style='width:407.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>エンティティオブジェクトは永続化コンテキストと関連付けられていません。</p>
  <p class=MsoNormal><span lang=EN-US>MANAGED</span>状態から<span lang=EN-US>DETACHED</span>状態への遷移は</p>
  <p class=MsoNormal><span lang=EN-US>EntityManager#clear </span>または<span
  lang=EN-US> EntityManager#close </span>で操作できます。</p>
  <p class=MsoNormal>もう一つ、トランザクションに関係した挙動でも遷移します（後述：<span lang=EN-US>merge </span>参照）</p>
  </td>
 </tr>
 <tr>
  <td width=161 valign=top style='width:120.5pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>REMOVED</span>状態</p>
  </td>
  <td width=543 valign=top style='width:407.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0mm 5.4pt 0mm 5.4pt'>
  <p class=MsoNormal>削除された状態です。<span lang=EN-US>EntityManager#persist</span>　で再び<span
  lang=EN-US>MANAGED</span>状態に遷移できます。</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180318"><span lang=EN-US>12.3 </span>トランザクション境界での状態遷移の挙動</a></h2>

<p class=MsoNormal><span lang=EN-US><img border=0 width=713 height=430 id="図 64"
src="SpringWebAppDoc.files/image062.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6 style='margin-left:0mm;text-indent:0mm'><span lang=EN-US>&nbsp;</span></h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>merge </span>メソッドの<span lang=EN-US>API doc</span></h6>

<p class=MsoNormal><span lang=EN-US>&lt;T&gt; T merge(T entity)</span></p>

<p class=MsoNormal><span lang=EN-US>Merge the state of the given entity into
the current persistence context.</span></p>

<p class=MsoNormal><span lang=EN-US>Parameters:</span></p>

<p class=MsoNormal><span lang=EN-US>entity - entity instance</span></p>

<p class=MsoNormal><span lang=EN-US>Returns:</span></p>

<p class=MsoNormal><span lang=EN-US>the managed instance that the state was
merged to</span></p>

<p class=MsoNormal><span lang=EN-US>Throws:</span></p>

<p class=MsoNormal><span lang=EN-US>IllegalArgumentException - if instance is
not an entity or is a removed entity</span></p>

<p class=MsoNormal><span lang=EN-US>TransactionRequiredException - if there is
no transaction when invoked on a container-managed entity manager of that is of
type PersistenceContextType.TRANSACTION</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180319"><span lang=EN-US>13． </span><span lang=EN-US>MySQL</span></a></h1>

<p class=MsoNormal><span lang=EN-US>MySQL80 </span>と<span lang=EN-US>MySQLWorkbench8.0
</span>を前提に説明します。</p>

<p class=MsoNormal><span lang=EN-US>MySQL</span>では「データベース」と「スキーマ」を区別しません。本書では同意語として使います。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180320"><span lang=EN-US>13.1 </span>データベースの作成</a></h2>

<p class=MsoNormal>（作成例）</p>

<p class=MsoNormal><span style='position:absolute;z-index:251736064;left:0px;
margin-left:43px;margin-top:202px;width:114px;height:48px'><img width=114
height=48 src="SpringWebAppDoc.files/image063.png"></span><span lang=EN-US><img
border=0 width=455 height=276 id="図 3" src="SpringWebAppDoc.files/image064.jpg"></span></p>

<h4><span lang=EN-US>（1） </span><span lang=EN-US> [create a new schema]</span>というボタンをクリック（赤枠内をクリック）</h4>

<h4><span lang=EN-US>（2） </span><span lang=EN-US>Name</span>には、登録したいスキーマの名前を入力</h4>

<h4><span lang=EN-US>（3） </span><span lang=EN-US>charset</span>（文字セット）<span
lang=EN-US>/collation</span>（デフォルトの照合順序）には、<span lang=EN-US>utf8/utf8_general_ci
</span>を選択</h4>

<h4><span lang=EN-US>（4） </span><span lang=EN-US>Apply</span>で確定</h4>

<p class=MsoNormal><span lang=EN-US><img border=0 width=518 height=181 id="図 39"
src="SpringWebAppDoc.files/image065.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=571 height=355 id="図 36"
src="SpringWebAppDoc.files/image066.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180321"><span lang=EN-US>13.2 </span>ユーザとパスワードの作成</a></h2>

<p class=MsoNormal>（作成例）</p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=724 height=404 id="図 42"
src="SpringWebAppDoc.files/image067.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180322"><span lang=EN-US>13.2.1 </span><span lang=EN-US>username</span>と<span
lang=EN-US>password </span>の確認方法と設定方法</a></h3>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>MySQL Workbench</span>でユーザー情報を確認する方法<span
lang=EN-US>:</span></h4>

<p class=MsoNormal><span lang=EN-US>MySQL Workbench </span>を開き、<span
lang=EN-US>MySQL </span>インスタンスに接続します。</p>

<p class=MsoNormal>メインメニューから「<span lang=EN-US>Server</span>（サーバー）」<span
lang=EN-US> -&gt; </span>「<span lang=EN-US>User and Privileges</span>（ユーザーと権限）」をクリックします。</p>

<p class=MsoNormal>左側のユーザーリストから確認したいユーザー名（例<span lang=EN-US>: mainbank</span>）を選択します。</p>

<p class=MsoNormal>右側に選択したユーザーの詳細（認証方式、パスワード、権限など）が表示されます。</p>

<h4><span lang=EN-US>（2） </span>ユーザー名とパスワードの設定方法<span lang=EN-US>:</span></h4>

<p class=MsoNormal>上記の「<span lang=EN-US>User and Privileges</span>」画面で、パスワードを変更したい場合は、「<span
lang=EN-US>Login</span>（ログイン）」タブで<span lang=EN-US> password </span>フィールドを変更し、適用します。</p>

<p class=MsoNormal>新しいユーザーを追加したい場合は、同じ画面の「<span lang=EN-US>Add Account</span>（アカウントを追加）」ボタンを押し、新しいユーザー名とパスワードを設定し、適切な権限を割り当てます。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180323"><span lang=EN-US>13.3 </span><span lang=EN-US>application.properties</span>の設定</a></h2>

<p class=MsoNormal>（設定例）</p>

<p class=MsoNormal><span lang=EN-US>spring.application.name=mainbank</span></p>

<p class=MsoNormal><span lang=EN-US>spring.thymeleaf.mode=HTML</span></p>

<p class=MsoNormal><span lang=EN-US>spring.datasource.url=jdbc:mysql://localhost:3306/db_mainbank?serverTimezone=UTC</span></p>

<p class=MsoNormal><span lang=EN-US>spring.datasource.username=mainbank</span></p>

<p class=MsoNormal><span lang=EN-US>spring.datasource.password=mainbank</span></p>

<p class=MsoNormal><span lang=EN-US># spring.datasource.driver-class-name
=com.mysql.jdbc.Driver =&gt;  'com.mysql.jdbc.Driver'. This is deprecated. </span></p>

<p class=MsoNormal><span lang=EN-US>spring.datasource.driver-class-name
=com.mysql.cj.jdbc.Driver</span></p>

<p class=MsoNormal><span lang=EN-US>spring.jpa.database=MYSQL</span></p>

<p class=MsoNormal><span lang=EN-US># create-drop cause Error executing DDL
&quot;alter table </span></p>

<p class=MsoNormal><span lang=EN-US>#none / validate / update / create /
create-drop / drop</span></p>

<p class=MsoNormal><span lang=EN-US>spring.jpa.hibernate.ddl-auto=update</span></p>

<p class=MsoNormal><span lang=EN-US>spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect</span></p>

<p class=MsoNormal><span lang=EN-US>spring.jpa.show-sql: true</span></p>

<p class=MsoNormal><span lang=EN-US>spring.security.user.name=test</span></p>

<p class=MsoNormal><span lang=EN-US>spring.security.user.password=test</span></p>

<p class=MsoNormal><span lang=EN-US>#platform line seems unnecessary</span></p>

<p class=MsoNormal><span lang=EN-US>#spring.datasource.platform=mysql</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180324"><span lang=EN-US>13.4 </span>データベースとスキーマ</a></h2>

<p class=MsoNormal><span lang=EN-US>MySQL</span>の場合、データベースとスキーマはほぼ同じ意味で使われます。</p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>データベース<span lang=EN-US>: MySQL</span>では「データベース」は、テーブルやビューなどのデータオブジェクトが保存される領域のことを指します。</h6>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>スキーマ<span lang=EN-US>: </span>一部のデータベースシステムでは、スキーマはデータベース内でテーブルや他のオブジェクトの構造を定義する「論理的なコレクション」です。</h6>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180325"><span lang=EN-US>13.5 </span><span lang=EN-US>spring.jpa.hibernate.ddl-auto</span>の設定</a></h2>

<p class=MsoNormal><span lang=EN-US>Spring Boot </span>アプリケーションにおける<span
lang=EN-US> Hibernate </span>のデータベーススキーマの自動生成や変更に関する設定です。これには複数のオプションがあり、それぞれ異なる挙動を持っています。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180326"><span lang=EN-US>13.5.1 </span>代表的なオプション</a></h3>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>none</span></h4>

<p class=MsoNormal><span lang=EN-US> </span>挙動<span lang=EN-US>: Hibernate </span>がスキーマ管理を一切行わず、データベースの構造はそのままです。</p>

<p class=MsoNormal><span lang=EN-US> </span>用途<span lang=EN-US>: </span>スキーマの自動生成や変更を避けたい場合。既存のスキーマがあり、手動で管理したいときに使用します。</p>

<h4><span lang=EN-US>（2） </span><span lang=EN-US>validate</span></h4>

<p class=MsoNormal><span lang=EN-US> </span>挙動<span lang=EN-US>: </span>エンティティの定義とデータベースのスキーマが一致しているかを検証しますが、データベースに対して何も変更を加えません。</p>

<p class=MsoNormal><span lang=EN-US> </span>用途<span lang=EN-US>: </span>スキーマが正しく設定されているか確認したい場合や、変更を加えずにスキーマの整合性をチェックしたい場合に適しています。</p>

<h4><span lang=EN-US>（3） </span><span lang=EN-US>update</span></h4>

<p class=MsoNormal><span lang=EN-US> </span>挙動<span lang=EN-US>: </span>エンティティの定義に基づいて、必要なテーブルやカラムを作成・更新します。ただし、既存のデータや構造を削除することはありません。</p>

<p class=MsoNormal><span lang=EN-US> </span>用途<span lang=EN-US>: </span>スキーマを自動的に変更したい場合や、既存のデータを維持したまま、変更を反映したい場合に適しています（現状これを使用中ですね）。</p>

<h4><span lang=EN-US>（4） </span><span lang=EN-US>create</span></h4>

<p class=MsoNormal><span lang=EN-US> </span>挙動<span lang=EN-US>: </span>アプリケーション起動時に既存のスキーマをすべて削除し、新しくスキーマを作成します。アプリケーション終了時にはスキーマは削除されません。</p>

<p class=MsoNormal><span lang=EN-US> </span>用途<span lang=EN-US>: </span>開発環境で新しいスキーマをすぐに作りたい場合に使用されますが、既存データは消えるため注意が必要です。</p>

<h4><span lang=EN-US>（5） </span><span lang=EN-US>create-drop</span></h4>

<p class=MsoNormal><span lang=EN-US> </span>挙動<span lang=EN-US>: </span>アプリケーションの起動時にスキーマを作成し、終了時にスキーマを削除します。</p>

<p class=MsoNormal><span lang=EN-US> </span>用途<span lang=EN-US>: </span>テストや一時的な環境で、スキーマを簡単に作成し、使用後にクリーンアップしたい場合に使用します。</p>

<h4><span lang=EN-US>（6） </span><span lang=EN-US>drop</span></h4>

<p class=MsoNormal><span lang=EN-US> </span>挙動<span lang=EN-US>: </span>アプリケーション起動時にスキーマを削除し、その後何もしません。</p>

<p class=MsoNormal><span lang=EN-US> </span>用途<span lang=EN-US>: </span>一般的にはあまり使用されませんが、起動時に明示的にスキーマを削除したい場合に使用します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc183180327"><span lang=EN-US>13.5.2 </span>オプションのまとめ</a></h3>

<p class=MsoNormal><span lang=EN-US> none: </span>スキーマ操作をしない（手動管理）。</p>

<p class=MsoNormal><span lang=EN-US> validate: </span>スキーマの検証のみ（変更なし）。</p>

<p class=MsoNormal><span lang=EN-US> update: </span>スキーマの更新（データは保持）。</p>

<p class=MsoNormal><span lang=EN-US> create: </span>スキーマを再作成（データは削除）。</p>

<p class=MsoNormal><span lang=EN-US> create-drop: </span>起動時にスキーマを作成し、終了時に削除。</p>

<p class=MsoNormal><span lang=EN-US> drop: </span>スキーマを削除。</p>

<p class=MsoNormal><span lang=EN-US>update </span>は開発時に便利ですが、本番環境では<span
lang=EN-US> validate </span>や<span lang=EN-US> none </span>を使って、スキーマを手動で管理するのが一般的です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180328"><span lang=EN-US>14． </span><span lang=EN-US>Tips</span>レンダリング</a></h1>

<p class=MsoNormal>レンダリングとは、<span lang=EN-US>Web</span>アプリ開発の文脈では、クライアントサイド・レンダリングやサーバサイド・レンダリングのように<span
lang=EN-US>HTML</span>データを生成する処理を指します。</p>

<p class=MsoNormal>また、最終的に、ブラウザがデータ（<span lang=EN-US>HTML</span>など）を視覚化する処理を指す場合もあります。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180329"><span lang=EN-US>14.1 </span>サーバサイドレンダリング（<span
lang=EN-US>Server-Side Rendering, SSR</span>）</a></h2>

<p class=MsoNormal><span lang=EN-US>JSP</span>（<span lang=EN-US>JavaServer
Pages</span>）はサーバーサイドレンダリングの一種です。</p>

<p class=MsoNormal>サーバーサイドレンダリングとは、サーバー側で<span lang=EN-US>HTML</span>を生成してクライアント（ブラウザ）に送信する方法です。</p>

<p class=MsoNormal><span lang=EN-US>JSP</span>は<span lang=EN-US>Java</span>でサーバーサイドのコードを実行し、その結果を<span
lang=EN-US>HTML</span>として生成します。具体的には、<span lang=EN-US>JSP</span>ページは<span
lang=EN-US>Java</span>コードや<span lang=EN-US>JSP</span>タグを含んでおり、サーバー上で実行されると、その出力が<span
lang=EN-US>HTML</span>として生成され、クライアントに送信されます。</p>

<p class=MsoNormal><span lang=EN-US>JSP</span>のレンダリングプロセスは次のようになります：</p>

<h4><span lang=EN-US>（1） </span>クライアントが<span lang=EN-US>JSP</span>ページにリクエストを送信する。</h4>

<h4><span lang=EN-US>（2） </span>サーバーが<span lang=EN-US>JSP</span>ファイルを受け取り、<span
lang=EN-US>Java Servlet</span>としてコンパイルする。</h4>

<h4><span lang=EN-US>（3） </span>コンパイルされた<span lang=EN-US>Servlet</span>が実行され、<span
lang=EN-US>HTML</span>出力を生成する。</h4>

<h4><span lang=EN-US>（4） </span>生成された<span lang=EN-US>HTML</span>がクライアントに送信され、ブラウザで表示される。</h4>

<p class=MsoNormal>このように、<span lang=EN-US>JSP</span>はサーバーサイドで実行されるため、サーバーサイドレンダリングの一部とされています。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180330"><span lang=EN-US>14.2 </span>クライアントサイドレンダリング（<span
lang=EN-US>Client-Side Rendering, CSR</span>）</a></h2>

<h4><span lang=EN-US>（1） </span><span lang=EN-US>JavaScript</span>フレームワーク</h4>

<p class=MsoNormal><span lang=EN-US>React, Angular,Vue.js </span>などの<span
lang=EN-US>JavaScript</span>フレームワークはクライアントサイドレンダリングを前提として設計されています。これらのフレームワークは、コンポーネントベースのアーキテクチャを使用して、クライアント側で効率的に<span
lang=EN-US>UI</span>を構築・更新します。</p>

<h4><span lang=EN-US>（2） </span><span lang=EN-US>SPA</span>（<span lang=EN-US>Single
Page Application</span>）</h4>

<p class=MsoNormal>クライアントサイドレンダリングは、一般的に<span lang=EN-US>SPA</span>アプリケーションで使用されます。<span
lang=EN-US>SPA</span>では、最初に必要な<span lang=EN-US>HTML</span>、<span lang=EN-US>CSS</span>、<span
lang=EN-US>JavaScript</span>をロードし、その後のページ遷移は<span lang=EN-US>JavaScript</span>によって行われ、サーバーから新しい<span
lang=EN-US>HTML</span>を取得するのではなく、必要なデータだけをフェッチして、ページを動的に更新します。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc183180331"><span lang=EN-US>14.3 </span>静的サイト生成（<span
lang=EN-US>Static Site Generation, SSG</span>）</a></h2>

<p class=MsoNormal>ウェブサイトのページを事前に生成し、それらを静的ファイル（通常は<span lang=EN-US>HTML</span>、<span
lang=EN-US>CSS</span>、<span lang=EN-US>JavaScript</span>など）としてサーバーに配置する手法です。<span
lang=EN-US>SSG</span>は、あらかじめ定義されたテンプレートとデータを基に、ビルド時に全てのページを生成するので、リクエスト時にサーバー側で動的に生成する必要がなく、非常に高速で効率的です。</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc183180332"><span lang=EN-US>15． </span><span lang=EN-US>Tips</span>：セレクトボックスの書き方</a></h1>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>HTML</span>素のコード</h6>

<p class=MsoNormal><span lang=EN-US>&lt;select name=&quot;example&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;option value=&quot;</span>サンプル<span
lang=EN-US>1&quot;&gt;</span>サンプル<span lang=EN-US>1&lt;/option&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;option value=&quot;</span>サンプル<span
lang=EN-US>2&quot;&gt;</span>サンプル<span lang=EN-US>2&lt;/option&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;option value=&quot;</span>サンプル<span
lang=EN-US>3&quot;&gt;</span>サンプル<span lang=EN-US>3&lt;/option&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/select&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>JSP JSTL</span>を使うとき</h6>

<p class=MsoNormal><span lang=EN-US>&lt;c:forEach items=&quot;${itemAry}&quot;
var=&quot;item&quot; varStatus=&quot;status&quot;&gt;</span></p>

<p class=MsoNormal>　<span lang=EN-US>&lt;option
value=&quot;${status.count}&quot; &lt;c:if
test=&quot;${status.count==itemIndexStr}&quot;&gt;selected&lt;/c:if&gt;&gt;
${item}&lt;/option&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/c:forEach&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Spring (Spring MVC) </span>を利用したとき</h6>

<p class=MsoNormal><span lang=EN-US>&lt;!--</span>職種<span lang=EN-US> --&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;div class=&quot;mr-2&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;form:select path=&quot;jobTypeId&quot;
onchange=&quot;showHome()&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;form:options
items=&quot;${jobTypeList}&quot; itemLabel=&quot;label&quot;
itemValue=&quot;id&quot; /</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/form:select&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/div&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h6><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Thymeleaf</span>を利用したとき</h6>

<p class=MsoNormal><span lang=EN-US>&lt;select class=&quot;dropdown
form-control&quot;&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;option
th:value=&quot;0&quot;&gt;&lt;/option&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>    &lt;option th:each=&quot;item :
${mDepartmentMap}&quot; th:value=&quot;${item.value}&quot;
th:text=&quot;${item.key}&quot;&gt;&lt;/option&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&lt;/select&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

</div>

</body>

</html>
